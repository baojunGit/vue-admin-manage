"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCurrent = exports["default"] = void 0;
exports.getNext = getNext;
exports.getSubCurrent = getSubCurrent;
exports.getSubNext = getSubNext;
exports.setSubCurrent = exports.setCurrent = void 0;
var storeEl = null;
var storeId = 'z-index-manage';
var storeMainKey = 'm';
var storeSubKey = 's';
var storeData = {
  m: 1000,
  s: 1000
};
function isDocument() {
  return typeof document !== 'undefined';
}
function getDomMaxZIndex() {
  var max = 0;
  if (isDocument()) {
    var allElem = document.body.getElementsByTagName('*');
    for (var i = 0; i < allElem.length; i++) {
      var elem = allElem[i];
      if (elem && elem.style && elem.nodeType === 1) {
        var zIndex = elem.style.zIndex;
        if (zIndex && /^\d+$/.test(zIndex)) {
          max = Math.max(max, Number(zIndex));
        }
      }
    }
  }
  return max;
}
function getDom() {
  if (!storeEl) {
    if (isDocument()) {
      storeEl = document.getElementById(storeId);
      if (!storeEl) {
        storeEl = document.createElement('div');
        storeEl.id = storeId;
        storeEl.style.display = 'none';
        document.body.appendChild(storeEl);
        setCurrent(storeData.m);
        setSubCurrent(storeData.s);
      }
    }
  }
  return storeEl;
}
function createSetHandle(key) {
  return function (value) {
    if (value) {
      value = Number(value);
      storeData[key] = value;
      var doc = getDom();
      if (doc) {
        if (doc.dataset) {
          doc.dataset[key] = value + '';
        } else {
          doc.setAttribute('data-' + key, value + '');
        }
      }
    }
    return storeData[key];
  };
}
var setCurrent = exports.setCurrent = createSetHandle(storeMainKey);
function createGetHandle(key, nextMethod) {
  return function getCurrent(currZindex) {
    var zIndex;
    var doc = getDom();
    if (doc) {
      var domVal = doc.dataset ? doc.dataset[key] : doc.getAttribute('data-' + key);
      if (domVal) {
        zIndex = Number(domVal);
      }
    }
    if (!zIndex) {
      zIndex = storeData[key];
    }
    if (currZindex) {
      if (Number(currZindex) < zIndex) {
        return nextMethod();
      }
      return currZindex;
    }
    return zIndex;
  };
}
var getCurrent = exports.getCurrent = createGetHandle(storeMainKey, getNext);
function getNext() {
  return setCurrent(getCurrent() + 1);
}
var setSubCurrent = exports.setSubCurrent = createSetHandle(storeSubKey);
var _getSubCurrent = createGetHandle(storeSubKey, getSubNext);
function getSubCurrent() {
  return getCurrent() + _getSubCurrent();
}
function getSubNext() {
  setSubCurrent(_getSubCurrent() + 1);
  return getSubCurrent();
}
/**
 * Web common z-index style management
 */
var DomZIndex = {
  setCurrent: setCurrent,
  getCurrent: getCurrent,
  getNext: getNext,
  setSubCurrent: setSubCurrent,
  getSubCurrent: getSubCurrent,
  getSubNext: getSubNext,
  getMax: getDomMaxZIndex
};
var _default = exports["default"] = DomZIndex;