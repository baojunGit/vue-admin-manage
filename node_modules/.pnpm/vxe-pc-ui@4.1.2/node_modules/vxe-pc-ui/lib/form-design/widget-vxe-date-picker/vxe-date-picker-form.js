"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WidgetVxeDatePickerFormComponent = void 0;
var _vue = require("vue");
var _core = require("@vxe-ui/core");
var _use = require("../../form-design/src/use");
var _form = _interopRequireDefault(require("../../form/src/form"));
var _formItem = _interopRequireDefault(require("../../form/src/form-item"));
var _input = _interopRequireDefault(require("../../input/src/input"));
var _switch = _interopRequireDefault(require("../../switch/src/switch"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const WidgetVxeDatePickerFormComponent = exports.WidgetVxeDatePickerFormComponent = (0, _vue.defineComponent)({
  props: {
    renderOpts: {
      type: Object,
      default: () => ({})
    },
    renderParams: {
      type: Object,
      default: () => ({})
    }
  },
  emits: [],
  setup(props) {
    const {
      computeKebabCaseName
    } = (0, _use.useWidgetName)(props);
    // const { renderDefaultValueFormItem } = useWidgetPropDefaultValue(props)
    return () => {
      const {
        renderParams
      } = props;
      const {
        widget
      } = renderParams;
      const kebabCaseName = computeKebabCaseName.value;
      return (0, _vue.h)(_form.default, {
        class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],
        vertical: true,
        span: 24,
        titleBold: true,
        data: widget.options
      }, {
        default() {
          return [(0, _vue.h)(_formItem.default, {
            title: (0, _core.getI18n)('vxe.formDesign.widgetProp.name')
          }, {
            default() {
              return (0, _vue.h)(_input.default, {
                modelValue: widget.title,
                'onUpdate:modelValue'(val) {
                  widget.title = val;
                }
              });
            }
          }), (0, _vue.h)(_formItem.default, {
            title: (0, _core.getI18n)('vxe.formDesign.widgetProp.placeholder'),
            field: 'placeholder',
            itemRender: {
              name: 'VxeInput'
            }
          }),
          // renderDefaultValueFormItem(),
          (0, _vue.h)(_formItem.default, {
            title: (0, _core.getI18n)('vxe.formDesign.widgetProp.required')
          }, {
            default() {
              return (0, _vue.h)(_switch.default, {
                modelValue: widget.required,
                'onUpdate:modelValue'(val) {
                  widget.required = val;
                }
              });
            }
          })];
        }
      });
    };
  }
});