"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _vue=require("vue"),_ui=require("../../ui"),_xeUtils=_interopRequireDefault(require("xe-utils")),_vn=require("../../ui/src/vn"),_dom=require("../../ui/src/dom"),_loading=_interopRequireDefault(require("../../loading/src/loading"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getNodeUniqueId(){return _xeUtils.default.uniqueId("node_")}var _default=exports.default=(0,_vue.defineComponent)({name:"VxeTree",props:{data:Array,height:[String,Number],minHeight:{type:[String,Number],default:()=>(0,_ui.getConfig)().tree.minHeight},loading:Boolean,loadingConfig:Object,accordion:{type:Boolean,default:()=>(0,_ui.getConfig)().tree.accordion},childrenField:{type:String,default:()=>(0,_ui.getConfig)().tree.childrenField},valueField:{type:String,default:()=>(0,_ui.getConfig)().tree.valueField},keyField:{type:String,default:()=>(0,_ui.getConfig)().tree.keyField},parentField:{type:String,default:()=>(0,_ui.getConfig)().tree.parentField},titleField:{type:String,default:()=>(0,_ui.getConfig)().tree.titleField},hasChildField:{type:String,default:()=>(0,_ui.getConfig)().tree.hasChildField},transform:Boolean,isCurrent:Boolean,isHover:Boolean,showLine:{type:Boolean,default:()=>(0,_ui.getConfig)().tree.showLine},trigger:String,indent:{type:Number,default:()=>(0,_ui.getConfig)().tree.indent},showRadio:{type:Boolean,default:()=>(0,_ui.getConfig)().tree.showRadio},checkNodeKey:{type:[String,Number],default:()=>(0,_ui.getConfig)().tree.checkNodeKey},radioConfig:Object,showCheckbox:{type:Boolean,default:()=>(0,_ui.getConfig)().tree.showCheckbox},checkNodeKeys:{type:Array,default:()=>(0,_ui.getConfig)().tree.checkNodeKeys},checkboxConfig:Object,nodeConfig:Object,lazy:Boolean,toggleMethod:Function,loadMethod:Function,showIcon:{type:Boolean,default:!0},iconOpen:{type:String,default:()=>(0,_ui.getConfig)().tree.iconOpen},iconClose:{type:String,default:()=>(0,_ui.getConfig)().tree.iconClose},iconLoaded:{type:String,default:()=>(0,_ui.getConfig)().tree.iconLoaded},size:{type:String,default:()=>(0,_ui.getConfig)().tree.size||(0,_ui.getConfig)().size}},emits:["update:modelValue","update:checkNodeKey","update:checkNodeKeys","node-click","node-dblclick","current-change","radio-change","checkbox-change","load-success","load-error"],setup(O,e){const{emit:o,slots:w}=e;var t=_xeUtils.default.uniqueId();const s=(0,_ui.useSize)(O)["computeSize"],u=(0,_vue.ref)(),I=(0,_vue.reactive)({currentNode:null,nodeMaps:{},selectRadioKey:O.checkNodeKey,treeList:[],treeExpandedMaps:{},treeExpandLazyLoadedMaps:{},selectCheckboxMaps:{},indeterminateCheckboxMaps:{}});const y={refElem:u},V=(0,_vue.computed)(()=>O.titleField||"title"),d=(0,_vue.computed)(()=>O.keyField||"id"),h=(0,_vue.computed)(()=>{var e=d.value;return O.valueField||e}),E=(0,_vue.computed)(()=>O.parentField||"parentId"),K=(0,_vue.computed)(()=>O.childrenField||"children"),T=(0,_vue.computed)(()=>O.hasChildField||"hasChild"),m=(0,_vue.computed)(()=>{var e=v.value["isCurrent"];return _xeUtils.default.isBoolean(e)?e:O.isCurrent}),b=(0,_vue.computed)(()=>{var e=v.value["isHover"];return _xeUtils.default.isBoolean(e)?e:O.isHover}),R=(0,_vue.computed)(()=>Object.assign({showIcon:!0},(0,_ui.getConfig)().tree.radioConfig,O.radioConfig)),B=(0,_vue.computed)(()=>Object.assign({showIcon:!0},(0,_ui.getConfig)().tree.checkboxConfig,O.checkboxConfig)),v=(0,_vue.computed)(()=>Object.assign({},(0,_ui.getConfig)().tree.nodeConfig,O.nodeConfig)),M=(0,_vue.computed)(()=>Object.assign({},(0,_ui.getConfig)().tree.loadingConfig,O.loadingConfig)),N=(0,_vue.computed)(()=>{var{height:e,minHeight:t}=O,a={};return e&&(a.height=(0,_dom.toCssUnit)(e)),t&&(a.minHeight=(0,_dom.toCssUnit)(t)),a}),U={computeRadioOpts:R,computeCheckboxOpts:B,computeNodeOpts:v},g={xID:t,props:O,context:e,internalData:{},reactData:I,getRefMaps:()=>y,getComputeMaps:()=>U},j=e=>{var t=h.value,e=_xeUtils.default.get(e,t);return _xeUtils.default.eqNull(e)?"":encodeURIComponent(e)};const a=e=>{var t=I["selectRadioKey"];return t===e};const D=e=>{var t=I["selectCheckboxMaps"];return!!t[e]};const S=e=>{var t=I["indeterminateCheckboxMaps"];return!!t[e]};const L=e=>{o("update:checkNodeKeys",e)},P=e=>{o("update:checkNodeKey",e)};const l=(e,t)=>{const a=Object.assign({},I.selectCheckboxMaps);e.forEach(e=>{t?a[e]=!0:a[e]&&delete a[e]}),I.selectCheckboxMaps=a},n=e=>{const t={};e&&e.forEach(e=>{t[e]=!0}),I.selectCheckboxMaps=t},i=(e,t,a)=>{t?a[e]&&(a[e]=!0):a[e]&&delete a[e]},F=(e,t,a)=>{o(e,(0,_ui.createEvent)(a,{$tree:g},t))},c={dispatchEvent:F,clearRadioNode(){return(I.selectRadioKey=null,_vue.nextTick)()},setRadioNode:(e,t)=>(e&&(I.selectRadioKey=t?j(e):null),(0,_vue.nextTick)()),setCheckboxNode:(e,t)=>(e&&(_xeUtils.default.isArray(e)||(e=[e]),l(e.map(e=>j(e)),t)),(0,_vue.nextTick)()),setCheckboxByNodeId:(e,t)=>(e&&(_xeUtils.default.isArray(e)||(e=[e]),l(e,t)),(0,_vue.nextTick)()),clearCheckboxNode(){return I.selectCheckboxMaps={},(0,_vue.nextTick)()},setAllCheckboxNode(e){const t=Object.assign(I.selectCheckboxMaps);var a=K.value;return e&&_xeUtils.default.eachTree(I.treeList,e=>{e=j(e);t[e]=!0},{children:a}),I.selectCheckboxMaps=t,(0,_vue.nextTick)()},clearExpandNode(){return _xeUtils.default.each(I.nodeMaps,e=>{e.treeLoaded=!1}),I.treeExpandedMaps={},(0,_vue.nextTick)()},setExpandByNodeId(e,t){const a=Object.assign(I.treeExpandedMaps);return e&&((e=_xeUtils.default.isArray(e)?e:[e]).forEach(e=>{i(e,t,a)}),I.treeExpandedMaps=a),(0,_vue.nextTick)()},setExpandNode(e,t){const a=Object.assign(I.treeExpandedMaps);return e&&((e=_xeUtils.default.isArray(e)?e:[e]).forEach(e=>{e=j(e);i(e,t,a)}),I.treeExpandedMaps=a),(0,_vue.nextTick)()},toggleExpandByNodeId(e){const t=Object.assign(I.treeExpandedMaps);return e&&((e=_xeUtils.default.isArray(e)?e:[e]).forEach(e=>{i(e,!t[e],t)}),I.treeExpandedMaps=t),(0,_vue.nextTick)()},toggleExpandNode(e){const t=Object.assign(I.treeExpandedMaps);return e&&((e=_xeUtils.default.isArray(e)?e:[e]).forEach(e=>{e=j(e);i(e,!t[e],t)}),I.treeExpandedMaps=t),(0,_vue.nextTick)()},setAllExpandNode(){const t=Object.assign(I.treeExpandedMaps);var e=K.value;return _xeUtils.default.eachTree(I.treeList,e=>{e=j(e);t[e]=!0},{children:e}),I.treeExpandedMaps=t,(0,_vue.nextTick)()},reloadExpandNode(e){var t=O["lazy"];return t?(c.clearExpandLoaded(e),_(e)):(0,_vue.nextTick)()},clearExpandLoaded(e){var t=O["lazy"],a=I["nodeMaps"];return t&&(t=a[j(e)])&&(t.treeLoaded=!1),(0,_vue.nextTick)()},loadChildrenNode(i,e){const{lazy:t,transform:a}=O,r=I["nodeMaps"];if(!t)return(0,_vue.nextTick)();const o=K.value,l=r[j(i)],c=l?l.level:0,s=l?l.nodes:[];return(e=>{const a=h.value;return Promise.resolve(e.map(e=>{var t,e=Object.assign({},e);return j(e)||(t=getNodeUniqueId(),_xeUtils.default.set(e,a,t)),e}))})(e).then(e=>(_xeUtils.default.eachTree(e,(e,t,a,o,n,d)=>{e=j(e);r[e]={item:i,itemIndex:-1,items:a,parent:n||l.item,nodes:s.concat(d),level:c+d.length,lineCount:0,treeLoaded:!1}},{children:o}),i[o]=e,a&&(i[o]=e),x(i),e))},isExpandByNode:e=>{var t=I["treeExpandedMaps"];return!!t[j(e)]},isCheckedByRadioNodeId:a,isCheckedByRadioNode:e=>a(j(e)),isCheckedByCheckboxNodeId:D,isIndeterminateByCheckboxNode:e=>S(j(e)),isCheckedByCheckboxNode:e=>D(j(e))},r=e=>{var t=O["transform"],a=d.value,o=E.value,n=K.value;I.treeList=t?_xeUtils.default.toArrayTree(e,{key:a,parentKey:o,mapChildren:n}):e?e.slice(0):[];{t=I.treeList;const r=h.value,l=(a=K.value,{});_xeUtils.default.eachTree(t,(e,t,a,o,n,d)=>{let i=j(e);i||(i=getNodeUniqueId(),_xeUtils.default.set(e,r,i)),l[i]={item:e,itemIndex:t,items:a,parent:n,nodes:d,level:d.length,lineCount:0,treeLoaded:!1}},{children:a}),I.nodeMaps=l}},p=(e,o,n)=>{var t=I["treeExpandedMaps"],a=K.value,d=j(e);n.lineCount++,t[d]&&_xeUtils.default.arrayEach(e[a],(e,t,a)=>{(!o||t<a.length-1)&&p(e,!1,n)})},x=e=>{const a=I["nodeMaps"];e&&(e=j(e),e=a[e])&&_xeUtils.default.lastArrayEach(e.nodes,e=>{var t=j(e),t=a[t];t&&(t.lineCount=0,p(e,!0,t))})},$=(e,t)=>{var{showRadio:a,showCheckbox:o,trigger:n}=O,d=R.value,i=B.value;let r=!1,l=!1,c=!1,s=!1;m.value?(r=!0,((e,t)=>{e.preventDefault();const a=v.value,{currentMethod:o,trigger:n}=a,d=K.value,i=_xeUtils.default.get(t,d),r=i&&i.length;let l=!!o;if(n==="child"){if(r)return}else if(n==="parent")if(!r)return;if(o)l=!o({node:t});var c;l||(c=!0,I.currentNode=t,F("current-change",{node:t,checked:!0},e))})(e,t)):I.currentNode&&(I.currentNode=null),"node"===n&&(s=!0,z(e,t)),a&&"node"===d.trigger&&(l=!0,q(e,t)),o&&"node"===i.trigger&&(c=!0,A(e,t)),F("node-click",{node:t,triggerCurrent:r,triggerRadio:l,triggerCheckbox:c,triggerExpand:s},e)},_=i=>{var e=B.value;const a=O["loadMethod"],r=e["checkStrictly"];return new Promise(e=>{if(a){const o=I["treeExpandLazyLoadedMaps"];var t=I["nodeMaps"];const n=j(i),d=t[n];o[n]=!0,Promise.resolve(a({$tree:g,node:i})).then(a=>{if(d.treeLoaded=!0,o[n]&&delete o[n],a=_xeUtils.default.isArray(a)?a:[])return c.loadChildrenNode(i,a).then(e=>{var t=I["treeExpandedMaps"];return e.length&&!t[n]&&(t[n]=!0),!r&&c.isCheckedByCheckboxNodeId(n)&&l(e.map(e=>j(e)),!0),x(i),F("load-success",{node:i,data:a},new Event("load-success")),(0,_vue.nextTick)()});x(i),F("load-success",{node:i,data:a},new Event("load-success"))}).catch(e=>{var t=I["treeExpandLazyLoadedMaps"];d.treeLoaded=!1,t[n]&&delete t[n],x(i),F("load-error",{node:i,data:e},new Event("load-error"))}).finally(()=>(0,_vue.nextTick)())}else e()})},X=(e,t)=>{const{lazy:o,accordion:a,toggleMethod:n}=O,{nodeMaps:d,treeExpandLazyLoadedMaps:i}=I,r=Object.assign({},I.treeExpandedMaps),l=K.value,c=T.value,s=[];let u=n?e.filter(e=>n({$tree:g,expanded:t,node:e})):e;a&&(u=u.length?[u[u.length-1]]:[],e=j(u[0]),e=d[e])&&e.items.forEach(e=>{e=j(e);r[e]&&delete r[e]});const h=[];return t?u.forEach(e=>{var t,a=j(e);r[a]||(t=d[a],o&&e[c]&&!t.treeLoaded&&!i[a]?s.push(_(e)):e[l]&&e[l].length&&(r[a]=!0,h.push(e)))}):u.forEach(e=>{var t=j(e);r[t]&&(delete r[t],h.push(e))}),I.treeExpandedMaps=r,h.forEach(x),Promise.all(s)},z=(e,t)=>{var a=O["lazy"],{treeExpandedMaps:o,treeExpandLazyLoadedMaps:n}=I,d=j(t),o=!o[d];e.stopPropagation(),a&&n[d]||X([t],o)},f=(e,n,d)=>{var t=K.value,t=_xeUtils.default.get(e,t),e=j(e);if(t&&t.length){let a=!1,o=0;t.forEach(e=>{var e=j(e),t=n[e];(t||d[e])&&(t&&o++,a=!0)}),o===t.length?(n[e]||(n[e]=!0),d[e]&&delete d[e]):(n[e]&&delete n[e],d[e]=a)}else d[e]&&delete d[e]},G=()=>{var e=I["treeList"];const l=K.value;var t=B.value["checkStrictly"];if(!t){const c=Object.assign({},I.selectCheckboxMaps),s={};_xeUtils.default.eachTree(e,(e,t,a,o,n,d)=>{var i=_xeUtils.default.get(e,l);if(i&&i.length||f(e,c,s),t===a.length-1)for(let e=d.length-2;0<=e;e--){var r=d[e];f(r,c,s)}}),I.selectCheckboxMaps=c,I.indeterminateCheckboxMaps=s}},A=(e,a)=>{e.preventDefault(),e.stopPropagation();var{checkStrictly:o,checkMethod:n}=B.value;let t=!!n;if(!(t=n?!n({node:a}):t)){const i=Object.assign({},I.selectCheckboxMaps);var n=K.value,d=j(a);let t=!1;i[d]?delete i[d]:(t=!0,i[d]=t),o||_xeUtils.default.eachTree(_xeUtils.default.get(a,n),e=>{e=j(e);t?i[e]||(i[e]=!0):i[e]&&delete i[e]},{children:n}),I.selectCheckboxMaps=i,G();d=Object.keys(I.selectCheckboxMaps);L(d),F("checkbox-change",{node:a,value:d,checked:t},e)}},q=(e,t)=>{e.preventDefault(),e.stopPropagation();var a=R.value["checkMethod"];let o=!!a;(o=a?!a({node:t}):o)||(a=j(t),I.selectRadioKey=a,P(a),F("radio-change",{node:t,value:a,checked:!0},e))};Object.assign(g,c,{});const H=a=>{var{lazy:e,showRadio:t,showCheckbox:o,showLine:n,indent:d,iconOpen:i,iconClose:r,iconLoaded:l,showIcon:c}=O,{nodeMaps:s,treeExpandedMaps:u,currentNode:h,selectRadioKey:v,treeExpandLazyLoadedMaps:g}=I,p=K.value,x=V.value,_=T.value,p=_xeUtils.default.get(a,p),f=p&&p.length,C=w.title,k=w.extra,y=j(a),E=u[y],s=s[y],x=_xeUtils.default.get(a,x);const m=[];f&&u[y]&&(n&&m.push((0,_vue.h)("div",{key:"line",class:"vxe-tree--node-child-line",style:{height:`calc(${s.lineCount} * var(--vxe-ui-tree-node-height) - var(--vxe-ui-tree-node-height) / 2)`,left:(s.level+1)*(d||1)+"px"}})),p.forEach(e=>{m.push(H(e))}));let b=!1,M=(t&&(b=y==v),!1),N=(o&&(M=D(y)),!1),U=!1,L=!1;return e&&(U=!!g[y],N=a[_],L=!!s.treeLoaded),(0,_vue.h)("div",{class:["vxe-tree--node-wrapper","node--level-"+s.level],nodeid:y},[(0,_vue.h)("div",{class:["vxe-tree--node-item",{"is--current":h&&y===j(h),"is-radio--checked":b,"is-checkbox--checked":M}],style:{paddingLeft:(s.level-1)*(d||1)+"px"},onClick(e){$(e,a)},onDblclick(e){var t;e=e,t=a,F("node-dblclick",{node:t},e)}},[c||n?(0,_vue.h)("div",{class:"vxe-tree--node-item-switcher"},c&&(!e||L?f:N)?[(0,_vue.h)("div",{class:"vxe-tree--node-item-icon",onClick(e){z(e,a)}},[(0,_vue.h)("i",{class:U?l||(0,_ui.getIcon)().TREE_NODE_LOADED:E?i||(0,_ui.getIcon)().TREE_NODE_OPEN:r||(0,_ui.getIcon)().TREE_NODE_CLOSE})])]:[]):(0,_vue.createCommentVNode)(),((t,e)=>{var a=O["showRadio"],{showIcon:o,checkMethod:n,visibleMethod:d}=R.value,d=!d||d({node:t});let i=!!n;return a&&o&&d?(n&&(i=!n({node:t})),(0,_vue.h)("div",{class:["vxe-tree--radio-option",{"is--checked":e,"is--disabled":i}],onClick:e=>{i||q(e,t)}},[(0,_vue.h)("span",{class:["vxe-radio--icon",e?(0,_ui.getIcon)().RADIO_CHECKED:(0,_ui.getIcon)().RADIO_UNCHECKED]})])):(0,_vue.createCommentVNode)()})(a,b),((t,e,a)=>{var o=O["showCheckbox"],{showIcon:n,checkMethod:d,visibleMethod:i}=B.value,e=S(e),i=!i||i({node:t});let r=!!d;return o&&n&&i?(d&&(r=!d({node:t})),(0,_vue.h)("div",{class:["vxe-tree--checkbox-option",{"is--checked":a,"is--indeterminate":e,"is--disabled":r}],onClick:e=>{r||A(e,t)}},[(0,_vue.h)("span",{class:["vxe-checkbox--icon",e?(0,_ui.getIcon)().CHECKBOX_INDETERMINATE:a?(0,_ui.getIcon)().CHECKBOX_CHECKED:(0,_ui.getIcon)().CHECKBOX_UNCHECKED]})])):(0,_vue.createCommentVNode)()})(a,y,M),(0,_vue.h)("div",{class:"vxe-tree--node-item-inner"},[(0,_vue.h)("div",{class:"vxe-tree--node-item-title"},C?(0,_vn.getSlotVNs)(C({node:a})):""+x),k?(0,_vue.h)("div",{class:"vxe-tree--node-item-extra"},(0,_vn.getSlotVNs)(k({node:a}))):(0,_vue.createCommentVNode)()])]),f&&u[y]?(0,_vue.h)("div",{class:"vxe-tree--node-child-wrapper"},m):(0,_vue.createCommentVNode)()])};g.renderVN=()=>{var{loading:e,trigger:t,showLine:a}=O,o=s.value,n=R.value,d=B.value,i=N.value,r=M.value,l=b.value;const c=w.loading;return(0,_vue.h)("div",{ref:u,class:["vxe-tree",{["size--"+o]:o,"show--line":a,"checkbox--highlight":d.highlight,"radio--highlight":n.highlight,"node--hover":l,"node--trigger":"node"===t,"is--loading":e}],style:i},[(o=I.treeList,(0,_vue.h)("div",{class:"vxe-tree--node-list-wrapper"},o.map(e=>H(e)))),(0,_vue.h)(_loading.default,{class:"vxe-tree--loading",modelValue:e,icon:r.icon,text:r.text},c?{default:()=>c({$tree:g})}:{})])};const C=(0,_vue.ref)(0),k=((0,_vue.watch)(()=>O.data?O.data.length:0,()=>{C.value++}),(0,_vue.watch)(()=>O.data,()=>{C.value++}),(0,_vue.watch)(C,()=>{r(O.data||[])}),(0,_vue.watch)(()=>O.checkNodeKey,e=>{I.selectRadioKey=e}),(0,_vue.ref)(0));return(0,_vue.watch)(()=>O.checkNodeKeys?O.checkNodeKeys.length:0,()=>{k.value++}),(0,_vue.watch)(()=>O.checkNodeKeys,()=>{k.value++}),(0,_vue.watch)(k,()=>{n(O.checkNodeKeys||[])}),(0,_vue.onUnmounted)(()=>{I.treeList=[],I.treeExpandedMaps={},I.nodeMaps={}}),r(O.data||[]),n(O.checkNodeKeys||[]),g},render(){return this.renderVN()}});