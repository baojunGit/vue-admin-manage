{"version":3,"file":"select.js","sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @mouseenter=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      :placement=\"placement\"\n      pure\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n          ]\"\n          @click.prevent.stop=\"toggleMenu\"\n        >\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!modelValue.length\n              ),\n            ]\"\n          >\n            <slot v-if=\"multiple\" name=\"tag\">\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(getValue(item))\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !getDisabled(item)\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  :effect=\"tagEffect\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    <slot\n                      name=\"label\"\n                      :label=\"getLabel(item)\"\n                      :value=\"getValue(item)\"\n                    >\n                      {{ getLabel(item) }}\n                    </slot>\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && modelValue.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :effect=\"tagEffect\"\n                      :style=\"collapseTagStyle\"\n                      disable-transitions\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ modelValue.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"selected in collapseTagList\"\n                      :key=\"getValueKey(getValue(selected))\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !getDisabled(selected)\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        :effect=\"tagEffect\"\n                        disable-transitions\n                        @close=\"deleteTag($event, selected)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          <slot\n                            name=\"label\"\n                            :label=\"getLabel(selected)\"\n                            :value=\"getValue(selected)\"\n                          >\n                            {{ getLabel(selected) }}\n                          </slot>\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              v-if=\"!selectDisabled\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                :style=\"inputStyle\"\n                :autocomplete=\"autocomplete\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-label=\"ariaLabel\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"shouldShowPlaceholder\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <slot\n                v-if=\"hasModelValue\"\n                name=\"label\"\n                :label=\"currentPlaceholder\"\n                :value=\"modelValue\"\n              >\n                <span>{{ currentPlaceholder }}</span>\n              </slot>\n              <span v-else>{{ currentPlaceholder }}</span>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelect.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[nsSelect.e('caret'), nsInput.e('icon')]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon\"\n              :class=\"[nsInput.e('icon'), nsInput.e('validateIcon')]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template v-if=\"$slots.header\" #header>\n            <div :class=\"nsSelect.be('dropdown', 'header')\">\n              <slot name=\"header\" />\n            </div>\n          </template>\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\" />\n          </template>\n          <template v-if=\"$slots.loading && loading\" #loading>\n            <div :class=\"nsSelect.be('dropdown', 'loading')\">\n              <slot name=\"loading\" />\n            </div>\n          </template>\n          <template v-else-if=\"loading || filteredOptions.length === 0\" #empty>\n            <div :class=\"nsSelect.be('dropdown', 'empty')\">\n              <slot name=\"empty\">\n                <span>{{ emptyText }}</span>\n              </slot>\n            </div>\n          </template>\n          <template v-if=\"$slots.footer\" #footer>\n            <div :class=\"nsSelect.be('dropdown', 'footer')\">\n              <slot name=\"footer\" />\n            </div>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide, reactive, toRefs } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElSelectMenu from './select-dropdown'\nimport useSelect from './useSelect'\nimport { SelectProps } from './defaults'\nimport { selectV2InjectionKey } from './token'\n\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: SelectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n      return multiple ? fallback : rawModelValue\n    })\n\n    const API = useSelect(\n      reactive({\n        ...toRefs(props),\n        modelValue,\n      }),\n      emit\n    )\n    // TODO, remove the any cast to align the actual API.\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue,\n      }),\n      tooltipRef: API.tooltipRef,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    } as any)\n\n    return {\n      ...API,\n      modelValue,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","ElSelectMenu","ElTag","ElTooltip","ElIcon","ClickOutside","SelectProps","UPDATE_MODEL_EVENT","CHANGE_EVENT","computed","isArray","useSelect","reactive","toRefs","provide","selectV2InjectionKey","_createElementBlock","_normalizeClass","_createVNode","_withCtx","_createElementVNode","_withModifiers","_renderSlot","_createCommentVNode","_openBlock","_Fragment","_renderList","_normalizeStyle","_createTextVNode","_toDisplayString","_createBlock","_withKeys","_vModelText","_withDirectives","_resolveDynamicComponent","_createSlots"],"mappings":"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"}