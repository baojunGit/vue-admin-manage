{
  "version": 3,
  "sources": ["../../.pnpm/vxe-pc-ui@4.1.2/node_modules/vxe-pc-ui/es/loading/src/loading.js", "../../.pnpm/vxe-pc-ui@4.1.2/node_modules/vxe-pc-ui/es/loading/index.js"],
  "sourcesContent": ["import { ref, defineComponent, h, computed, watch, createCommentVNode } from 'vue';\nimport { getConfig, getIcon, getI18n } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeLoading',\n    props: {\n        modelValue: Boolean,\n        icon: {\n            type: String,\n            default: () => getConfig().loading.icon\n        },\n        text: {\n            type: String,\n            default: () => getConfig().loading.text\n        },\n        status: String\n    },\n    setup(props, { slots }) {\n        const refInitialized = ref(false);\n        const computeLoadingIcon = computed(() => {\n            return props.icon || getIcon().LOADING;\n        });\n        const computeLoadingText = computed(() => {\n            const { text } = props;\n            return XEUtils.isString(text) ? text : getI18n('vxe.loading.text');\n        });\n        const handleInit = () => {\n            if (!refInitialized.value) {\n                refInitialized.value = !!props.modelValue;\n            }\n        };\n        watch(() => props.modelValue, () => {\n            handleInit();\n        });\n        handleInit();\n        return () => {\n            const { modelValue, status } = props;\n            const defaultSlot = slots.default;\n            const textSlot = slots.text;\n            const iconSlot = slots.icon;\n            const initialized = refInitialized.value;\n            const loadingIcon = computeLoadingIcon.value;\n            const loadingText = computeLoadingText.value;\n            if (!initialized && !modelValue) {\n                return createCommentVNode();\n            }\n            return h('div', {\n                class: ['vxe-loading', {\n                        [`theme--${status}`]: status,\n                        'is--visible': modelValue\n                    }]\n            }, defaultSlot\n                ? [\n                    h('div', {\n                        class: 'vxe-loading--wrapper'\n                    }, getSlotVNs(defaultSlot({})))\n                ]\n                : [\n                    h('div', {\n                        class: 'vxe-loading--chunk'\n                    }, [\n                        iconSlot || loadingIcon\n                            ? h('div', {\n                                class: 'vxe-loading--icon'\n                            }, iconSlot\n                                ? getSlotVNs(iconSlot({}))\n                                : [\n                                    h('i', {\n                                        class: loadingIcon\n                                    })\n                                ])\n                            : h('div', {\n                                class: 'vxe-loading--spinner'\n                            }),\n                        textSlot || loadingText\n                            ? h('div', {\n                                class: 'vxe-loading--text'\n                            }, textSlot ? getSlotVNs(textSlot({})) : `${loadingText}`)\n                            : null\n                    ])\n                ]);\n        };\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeLoadingComponent from './src/loading';\nimport { dynamicApp, dynamicStore, checkDynamic } from '../dynamics';\nexport const VxeLoading = Object.assign({}, VxeLoadingComponent, {\n    install(app) {\n        app.component(VxeLoadingComponent.name, VxeLoadingComponent);\n    }\n});\nexport const LoadingController = {\n    open(options) {\n        const opts = Object.assign({}, options);\n        dynamicStore.globalLoading = {\n            modelValue: true,\n            text: opts.text,\n            icon: opts.icon\n        };\n        checkDynamic();\n    },\n    close() {\n        dynamicStore.globalLoading = null;\n    }\n};\ndynamicApp.component(VxeLoadingComponent.name, VxeLoadingComponent);\nVxeUI.component(VxeLoadingComponent);\nVxeUI.loading = LoadingController;\nexport const Loading = VxeLoading;\nexport default VxeLoading;\n"],
  "mappings": "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",
  "names": ["XEUtils", "loading_default"]
}
