import "./chunk-D3S72KJS.js";
import {
  Fragment,
  computed,
  createBaseVNode,
  createElementBlock,
  defineComponent,
  h,
  normalizeStyle,
  openBlock,
  renderList,
  unref,
  useCssVars
} from "./chunk-4BEKJ24D.js";
import {
  __commonJS,
  __export,
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/.pnpm/colornames@1.1.1/node_modules/colornames/colors.js
var require_colors = __commonJS({
  "node_modules/.pnpm/colornames@1.1.1/node_modules/colornames/colors.js"(exports, module2) {
    module2.exports = [
      {
        "value": "#B0171F",
        "name": "indian red"
      },
      {
        "value": "#DC143C",
        "css": true,
        "name": "crimson"
      },
      {
        "value": "#FFB6C1",
        "css": true,
        "name": "lightpink"
      },
      {
        "value": "#FFAEB9",
        "name": "lightpink 1"
      },
      {
        "value": "#EEA2AD",
        "name": "lightpink 2"
      },
      {
        "value": "#CD8C95",
        "name": "lightpink 3"
      },
      {
        "value": "#8B5F65",
        "name": "lightpink 4"
      },
      {
        "value": "#FFC0CB",
        "css": true,
        "name": "pink"
      },
      {
        "value": "#FFB5C5",
        "name": "pink 1"
      },
      {
        "value": "#EEA9B8",
        "name": "pink 2"
      },
      {
        "value": "#CD919E",
        "name": "pink 3"
      },
      {
        "value": "#8B636C",
        "name": "pink 4"
      },
      {
        "value": "#DB7093",
        "css": true,
        "name": "palevioletred"
      },
      {
        "value": "#FF82AB",
        "name": "palevioletred 1"
      },
      {
        "value": "#EE799F",
        "name": "palevioletred 2"
      },
      {
        "value": "#CD6889",
        "name": "palevioletred 3"
      },
      {
        "value": "#8B475D",
        "name": "palevioletred 4"
      },
      {
        "value": "#FFF0F5",
        "name": "lavenderblush 1"
      },
      {
        "value": "#FFF0F5",
        "css": true,
        "name": "lavenderblush"
      },
      {
        "value": "#EEE0E5",
        "name": "lavenderblush 2"
      },
      {
        "value": "#CDC1C5",
        "name": "lavenderblush 3"
      },
      {
        "value": "#8B8386",
        "name": "lavenderblush 4"
      },
      {
        "value": "#FF3E96",
        "name": "violetred 1"
      },
      {
        "value": "#EE3A8C",
        "name": "violetred 2"
      },
      {
        "value": "#CD3278",
        "name": "violetred 3"
      },
      {
        "value": "#8B2252",
        "name": "violetred 4"
      },
      {
        "value": "#FF69B4",
        "css": true,
        "name": "hotpink"
      },
      {
        "value": "#FF6EB4",
        "name": "hotpink 1"
      },
      {
        "value": "#EE6AA7",
        "name": "hotpink 2"
      },
      {
        "value": "#CD6090",
        "name": "hotpink 3"
      },
      {
        "value": "#8B3A62",
        "name": "hotpink 4"
      },
      {
        "value": "#872657",
        "name": "raspberry"
      },
      {
        "value": "#FF1493",
        "name": "deeppink 1"
      },
      {
        "value": "#FF1493",
        "css": true,
        "name": "deeppink"
      },
      {
        "value": "#EE1289",
        "name": "deeppink 2"
      },
      {
        "value": "#CD1076",
        "name": "deeppink 3"
      },
      {
        "value": "#8B0A50",
        "name": "deeppink 4"
      },
      {
        "value": "#FF34B3",
        "name": "maroon 1"
      },
      {
        "value": "#EE30A7",
        "name": "maroon 2"
      },
      {
        "value": "#CD2990",
        "name": "maroon 3"
      },
      {
        "value": "#8B1C62",
        "name": "maroon 4"
      },
      {
        "value": "#C71585",
        "css": true,
        "name": "mediumvioletred"
      },
      {
        "value": "#D02090",
        "name": "violetred"
      },
      {
        "value": "#DA70D6",
        "css": true,
        "name": "orchid"
      },
      {
        "value": "#FF83FA",
        "name": "orchid 1"
      },
      {
        "value": "#EE7AE9",
        "name": "orchid 2"
      },
      {
        "value": "#CD69C9",
        "name": "orchid 3"
      },
      {
        "value": "#8B4789",
        "name": "orchid 4"
      },
      {
        "value": "#D8BFD8",
        "css": true,
        "name": "thistle"
      },
      {
        "value": "#FFE1FF",
        "name": "thistle 1"
      },
      {
        "value": "#EED2EE",
        "name": "thistle 2"
      },
      {
        "value": "#CDB5CD",
        "name": "thistle 3"
      },
      {
        "value": "#8B7B8B",
        "name": "thistle 4"
      },
      {
        "value": "#FFBBFF",
        "name": "plum 1"
      },
      {
        "value": "#EEAEEE",
        "name": "plum 2"
      },
      {
        "value": "#CD96CD",
        "name": "plum 3"
      },
      {
        "value": "#8B668B",
        "name": "plum 4"
      },
      {
        "value": "#DDA0DD",
        "css": true,
        "name": "plum"
      },
      {
        "value": "#EE82EE",
        "css": true,
        "name": "violet"
      },
      {
        "value": "#FF00FF",
        "vga": true,
        "name": "magenta"
      },
      {
        "value": "#FF00FF",
        "vga": true,
        "css": true,
        "name": "fuchsia"
      },
      {
        "value": "#EE00EE",
        "name": "magenta 2"
      },
      {
        "value": "#CD00CD",
        "name": "magenta 3"
      },
      {
        "value": "#8B008B",
        "name": "magenta 4"
      },
      {
        "value": "#8B008B",
        "css": true,
        "name": "darkmagenta"
      },
      {
        "value": "#800080",
        "vga": true,
        "css": true,
        "name": "purple"
      },
      {
        "value": "#BA55D3",
        "css": true,
        "name": "mediumorchid"
      },
      {
        "value": "#E066FF",
        "name": "mediumorchid 1"
      },
      {
        "value": "#D15FEE",
        "name": "mediumorchid 2"
      },
      {
        "value": "#B452CD",
        "name": "mediumorchid 3"
      },
      {
        "value": "#7A378B",
        "name": "mediumorchid 4"
      },
      {
        "value": "#9400D3",
        "css": true,
        "name": "darkviolet"
      },
      {
        "value": "#9932CC",
        "css": true,
        "name": "darkorchid"
      },
      {
        "value": "#BF3EFF",
        "name": "darkorchid 1"
      },
      {
        "value": "#B23AEE",
        "name": "darkorchid 2"
      },
      {
        "value": "#9A32CD",
        "name": "darkorchid 3"
      },
      {
        "value": "#68228B",
        "name": "darkorchid 4"
      },
      {
        "value": "#4B0082",
        "css": true,
        "name": "indigo"
      },
      {
        "value": "#8A2BE2",
        "css": true,
        "name": "blueviolet"
      },
      {
        "value": "#9B30FF",
        "name": "purple 1"
      },
      {
        "value": "#912CEE",
        "name": "purple 2"
      },
      {
        "value": "#7D26CD",
        "name": "purple 3"
      },
      {
        "value": "#551A8B",
        "name": "purple 4"
      },
      {
        "value": "#9370DB",
        "css": true,
        "name": "mediumpurple"
      },
      {
        "value": "#AB82FF",
        "name": "mediumpurple 1"
      },
      {
        "value": "#9F79EE",
        "name": "mediumpurple 2"
      },
      {
        "value": "#8968CD",
        "name": "mediumpurple 3"
      },
      {
        "value": "#5D478B",
        "name": "mediumpurple 4"
      },
      {
        "value": "#483D8B",
        "css": true,
        "name": "darkslateblue"
      },
      {
        "value": "#8470FF",
        "name": "lightslateblue"
      },
      {
        "value": "#7B68EE",
        "css": true,
        "name": "mediumslateblue"
      },
      {
        "value": "#6A5ACD",
        "css": true,
        "name": "slateblue"
      },
      {
        "value": "#836FFF",
        "name": "slateblue 1"
      },
      {
        "value": "#7A67EE",
        "name": "slateblue 2"
      },
      {
        "value": "#6959CD",
        "name": "slateblue 3"
      },
      {
        "value": "#473C8B",
        "name": "slateblue 4"
      },
      {
        "value": "#F8F8FF",
        "css": true,
        "name": "ghostwhite"
      },
      {
        "value": "#E6E6FA",
        "css": true,
        "name": "lavender"
      },
      {
        "value": "#0000FF",
        "vga": true,
        "css": true,
        "name": "blue"
      },
      {
        "value": "#0000EE",
        "name": "blue 2"
      },
      {
        "value": "#0000CD",
        "name": "blue 3"
      },
      {
        "value": "#0000CD",
        "css": true,
        "name": "mediumblue"
      },
      {
        "value": "#00008B",
        "name": "blue 4"
      },
      {
        "value": "#00008B",
        "css": true,
        "name": "darkblue"
      },
      {
        "value": "#000080",
        "vga": true,
        "css": true,
        "name": "navy"
      },
      {
        "value": "#191970",
        "css": true,
        "name": "midnightblue"
      },
      {
        "value": "#3D59AB",
        "name": "cobalt"
      },
      {
        "value": "#4169E1",
        "css": true,
        "name": "royalblue"
      },
      {
        "value": "#4876FF",
        "name": "royalblue 1"
      },
      {
        "value": "#436EEE",
        "name": "royalblue 2"
      },
      {
        "value": "#3A5FCD",
        "name": "royalblue 3"
      },
      {
        "value": "#27408B",
        "name": "royalblue 4"
      },
      {
        "value": "#6495ED",
        "css": true,
        "name": "cornflowerblue"
      },
      {
        "value": "#B0C4DE",
        "css": true,
        "name": "lightsteelblue"
      },
      {
        "value": "#CAE1FF",
        "name": "lightsteelblue 1"
      },
      {
        "value": "#BCD2EE",
        "name": "lightsteelblue 2"
      },
      {
        "value": "#A2B5CD",
        "name": "lightsteelblue 3"
      },
      {
        "value": "#6E7B8B",
        "name": "lightsteelblue 4"
      },
      {
        "value": "#778899",
        "css": true,
        "name": "lightslategray"
      },
      {
        "value": "#708090",
        "css": true,
        "name": "slategray"
      },
      {
        "value": "#C6E2FF",
        "name": "slategray 1"
      },
      {
        "value": "#B9D3EE",
        "name": "slategray 2"
      },
      {
        "value": "#9FB6CD",
        "name": "slategray 3"
      },
      {
        "value": "#6C7B8B",
        "name": "slategray 4"
      },
      {
        "value": "#1E90FF",
        "name": "dodgerblue 1"
      },
      {
        "value": "#1E90FF",
        "css": true,
        "name": "dodgerblue"
      },
      {
        "value": "#1C86EE",
        "name": "dodgerblue 2"
      },
      {
        "value": "#1874CD",
        "name": "dodgerblue 3"
      },
      {
        "value": "#104E8B",
        "name": "dodgerblue 4"
      },
      {
        "value": "#F0F8FF",
        "css": true,
        "name": "aliceblue"
      },
      {
        "value": "#4682B4",
        "css": true,
        "name": "steelblue"
      },
      {
        "value": "#63B8FF",
        "name": "steelblue 1"
      },
      {
        "value": "#5CACEE",
        "name": "steelblue 2"
      },
      {
        "value": "#4F94CD",
        "name": "steelblue 3"
      },
      {
        "value": "#36648B",
        "name": "steelblue 4"
      },
      {
        "value": "#87CEFA",
        "css": true,
        "name": "lightskyblue"
      },
      {
        "value": "#B0E2FF",
        "name": "lightskyblue 1"
      },
      {
        "value": "#A4D3EE",
        "name": "lightskyblue 2"
      },
      {
        "value": "#8DB6CD",
        "name": "lightskyblue 3"
      },
      {
        "value": "#607B8B",
        "name": "lightskyblue 4"
      },
      {
        "value": "#87CEFF",
        "name": "skyblue 1"
      },
      {
        "value": "#7EC0EE",
        "name": "skyblue 2"
      },
      {
        "value": "#6CA6CD",
        "name": "skyblue 3"
      },
      {
        "value": "#4A708B",
        "name": "skyblue 4"
      },
      {
        "value": "#87CEEB",
        "css": true,
        "name": "skyblue"
      },
      {
        "value": "#00BFFF",
        "name": "deepskyblue 1"
      },
      {
        "value": "#00BFFF",
        "css": true,
        "name": "deepskyblue"
      },
      {
        "value": "#00B2EE",
        "name": "deepskyblue 2"
      },
      {
        "value": "#009ACD",
        "name": "deepskyblue 3"
      },
      {
        "value": "#00688B",
        "name": "deepskyblue 4"
      },
      {
        "value": "#33A1C9",
        "name": "peacock"
      },
      {
        "value": "#ADD8E6",
        "css": true,
        "name": "lightblue"
      },
      {
        "value": "#BFEFFF",
        "name": "lightblue 1"
      },
      {
        "value": "#B2DFEE",
        "name": "lightblue 2"
      },
      {
        "value": "#9AC0CD",
        "name": "lightblue 3"
      },
      {
        "value": "#68838B",
        "name": "lightblue 4"
      },
      {
        "value": "#B0E0E6",
        "css": true,
        "name": "powderblue"
      },
      {
        "value": "#98F5FF",
        "name": "cadetblue 1"
      },
      {
        "value": "#8EE5EE",
        "name": "cadetblue 2"
      },
      {
        "value": "#7AC5CD",
        "name": "cadetblue 3"
      },
      {
        "value": "#53868B",
        "name": "cadetblue 4"
      },
      {
        "value": "#00F5FF",
        "name": "turquoise 1"
      },
      {
        "value": "#00E5EE",
        "name": "turquoise 2"
      },
      {
        "value": "#00C5CD",
        "name": "turquoise 3"
      },
      {
        "value": "#00868B",
        "name": "turquoise 4"
      },
      {
        "value": "#5F9EA0",
        "css": true,
        "name": "cadetblue"
      },
      {
        "value": "#00CED1",
        "css": true,
        "name": "darkturquoise"
      },
      {
        "value": "#F0FFFF",
        "name": "azure 1"
      },
      {
        "value": "#F0FFFF",
        "css": true,
        "name": "azure"
      },
      {
        "value": "#E0EEEE",
        "name": "azure 2"
      },
      {
        "value": "#C1CDCD",
        "name": "azure 3"
      },
      {
        "value": "#838B8B",
        "name": "azure 4"
      },
      {
        "value": "#E0FFFF",
        "name": "lightcyan 1"
      },
      {
        "value": "#E0FFFF",
        "css": true,
        "name": "lightcyan"
      },
      {
        "value": "#D1EEEE",
        "name": "lightcyan 2"
      },
      {
        "value": "#B4CDCD",
        "name": "lightcyan 3"
      },
      {
        "value": "#7A8B8B",
        "name": "lightcyan 4"
      },
      {
        "value": "#BBFFFF",
        "name": "paleturquoise 1"
      },
      {
        "value": "#AEEEEE",
        "name": "paleturquoise 2"
      },
      {
        "value": "#AEEEEE",
        "css": true,
        "name": "paleturquoise"
      },
      {
        "value": "#96CDCD",
        "name": "paleturquoise 3"
      },
      {
        "value": "#668B8B",
        "name": "paleturquoise 4"
      },
      {
        "value": "#2F4F4F",
        "css": true,
        "name": "darkslategray"
      },
      {
        "value": "#97FFFF",
        "name": "darkslategray 1"
      },
      {
        "value": "#8DEEEE",
        "name": "darkslategray 2"
      },
      {
        "value": "#79CDCD",
        "name": "darkslategray 3"
      },
      {
        "value": "#528B8B",
        "name": "darkslategray 4"
      },
      {
        "value": "#00FFFF",
        "name": "cyan"
      },
      {
        "value": "#00FFFF",
        "css": true,
        "name": "aqua"
      },
      {
        "value": "#00EEEE",
        "name": "cyan 2"
      },
      {
        "value": "#00CDCD",
        "name": "cyan 3"
      },
      {
        "value": "#008B8B",
        "name": "cyan 4"
      },
      {
        "value": "#008B8B",
        "css": true,
        "name": "darkcyan"
      },
      {
        "value": "#008080",
        "vga": true,
        "css": true,
        "name": "teal"
      },
      {
        "value": "#48D1CC",
        "css": true,
        "name": "mediumturquoise"
      },
      {
        "value": "#20B2AA",
        "css": true,
        "name": "lightseagreen"
      },
      {
        "value": "#03A89E",
        "name": "manganeseblue"
      },
      {
        "value": "#40E0D0",
        "css": true,
        "name": "turquoise"
      },
      {
        "value": "#808A87",
        "name": "coldgrey"
      },
      {
        "value": "#00C78C",
        "name": "turquoiseblue"
      },
      {
        "value": "#7FFFD4",
        "name": "aquamarine 1"
      },
      {
        "value": "#7FFFD4",
        "css": true,
        "name": "aquamarine"
      },
      {
        "value": "#76EEC6",
        "name": "aquamarine 2"
      },
      {
        "value": "#66CDAA",
        "name": "aquamarine 3"
      },
      {
        "value": "#66CDAA",
        "css": true,
        "name": "mediumaquamarine"
      },
      {
        "value": "#458B74",
        "name": "aquamarine 4"
      },
      {
        "value": "#00FA9A",
        "css": true,
        "name": "mediumspringgreen"
      },
      {
        "value": "#F5FFFA",
        "css": true,
        "name": "mintcream"
      },
      {
        "value": "#00FF7F",
        "css": true,
        "name": "springgreen"
      },
      {
        "value": "#00EE76",
        "name": "springgreen 1"
      },
      {
        "value": "#00CD66",
        "name": "springgreen 2"
      },
      {
        "value": "#008B45",
        "name": "springgreen 3"
      },
      {
        "value": "#3CB371",
        "css": true,
        "name": "mediumseagreen"
      },
      {
        "value": "#54FF9F",
        "name": "seagreen 1"
      },
      {
        "value": "#4EEE94",
        "name": "seagreen 2"
      },
      {
        "value": "#43CD80",
        "name": "seagreen 3"
      },
      {
        "value": "#2E8B57",
        "name": "seagreen 4"
      },
      {
        "value": "#2E8B57",
        "css": true,
        "name": "seagreen"
      },
      {
        "value": "#00C957",
        "name": "emeraldgreen"
      },
      {
        "value": "#BDFCC9",
        "name": "mint"
      },
      {
        "value": "#3D9140",
        "name": "cobaltgreen"
      },
      {
        "value": "#F0FFF0",
        "name": "honeydew 1"
      },
      {
        "value": "#F0FFF0",
        "css": true,
        "name": "honeydew"
      },
      {
        "value": "#E0EEE0",
        "name": "honeydew 2"
      },
      {
        "value": "#C1CDC1",
        "name": "honeydew 3"
      },
      {
        "value": "#838B83",
        "name": "honeydew 4"
      },
      {
        "value": "#8FBC8F",
        "css": true,
        "name": "darkseagreen"
      },
      {
        "value": "#C1FFC1",
        "name": "darkseagreen 1"
      },
      {
        "value": "#B4EEB4",
        "name": "darkseagreen 2"
      },
      {
        "value": "#9BCD9B",
        "name": "darkseagreen 3"
      },
      {
        "value": "#698B69",
        "name": "darkseagreen 4"
      },
      {
        "value": "#98FB98",
        "css": true,
        "name": "palegreen"
      },
      {
        "value": "#9AFF9A",
        "name": "palegreen 1"
      },
      {
        "value": "#90EE90",
        "name": "palegreen 2"
      },
      {
        "value": "#90EE90",
        "css": true,
        "name": "lightgreen"
      },
      {
        "value": "#7CCD7C",
        "name": "palegreen 3"
      },
      {
        "value": "#548B54",
        "name": "palegreen 4"
      },
      {
        "value": "#32CD32",
        "css": true,
        "name": "limegreen"
      },
      {
        "value": "#228B22",
        "css": true,
        "name": "forestgreen"
      },
      {
        "value": "#00FF00",
        "vga": true,
        "name": "green 1"
      },
      {
        "value": "#00FF00",
        "vga": true,
        "css": true,
        "name": "lime"
      },
      {
        "value": "#00EE00",
        "name": "green 2"
      },
      {
        "value": "#00CD00",
        "name": "green 3"
      },
      {
        "value": "#008B00",
        "name": "green 4"
      },
      {
        "value": "#008000",
        "vga": true,
        "css": true,
        "name": "green"
      },
      {
        "value": "#006400",
        "css": true,
        "name": "darkgreen"
      },
      {
        "value": "#308014",
        "name": "sapgreen"
      },
      {
        "value": "#7CFC00",
        "css": true,
        "name": "lawngreen"
      },
      {
        "value": "#7FFF00",
        "name": "chartreuse 1"
      },
      {
        "value": "#7FFF00",
        "css": true,
        "name": "chartreuse"
      },
      {
        "value": "#76EE00",
        "name": "chartreuse 2"
      },
      {
        "value": "#66CD00",
        "name": "chartreuse 3"
      },
      {
        "value": "#458B00",
        "name": "chartreuse 4"
      },
      {
        "value": "#ADFF2F",
        "css": true,
        "name": "greenyellow"
      },
      {
        "value": "#CAFF70",
        "name": "darkolivegreen 1"
      },
      {
        "value": "#BCEE68",
        "name": "darkolivegreen 2"
      },
      {
        "value": "#A2CD5A",
        "name": "darkolivegreen 3"
      },
      {
        "value": "#6E8B3D",
        "name": "darkolivegreen 4"
      },
      {
        "value": "#556B2F",
        "css": true,
        "name": "darkolivegreen"
      },
      {
        "value": "#6B8E23",
        "css": true,
        "name": "olivedrab"
      },
      {
        "value": "#C0FF3E",
        "name": "olivedrab 1"
      },
      {
        "value": "#B3EE3A",
        "name": "olivedrab 2"
      },
      {
        "value": "#9ACD32",
        "name": "olivedrab 3"
      },
      {
        "value": "#9ACD32",
        "css": true,
        "name": "yellowgreen"
      },
      {
        "value": "#698B22",
        "name": "olivedrab 4"
      },
      {
        "value": "#FFFFF0",
        "name": "ivory 1"
      },
      {
        "value": "#FFFFF0",
        "css": true,
        "name": "ivory"
      },
      {
        "value": "#EEEEE0",
        "name": "ivory 2"
      },
      {
        "value": "#CDCDC1",
        "name": "ivory 3"
      },
      {
        "value": "#8B8B83",
        "name": "ivory 4"
      },
      {
        "value": "#F5F5DC",
        "css": true,
        "name": "beige"
      },
      {
        "value": "#FFFFE0",
        "name": "lightyellow 1"
      },
      {
        "value": "#FFFFE0",
        "css": true,
        "name": "lightyellow"
      },
      {
        "value": "#EEEED1",
        "name": "lightyellow 2"
      },
      {
        "value": "#CDCDB4",
        "name": "lightyellow 3"
      },
      {
        "value": "#8B8B7A",
        "name": "lightyellow 4"
      },
      {
        "value": "#FAFAD2",
        "css": true,
        "name": "lightgoldenrodyellow"
      },
      {
        "value": "#FFFF00",
        "vga": true,
        "name": "yellow 1"
      },
      {
        "value": "#FFFF00",
        "vga": true,
        "css": true,
        "name": "yellow"
      },
      {
        "value": "#EEEE00",
        "name": "yellow 2"
      },
      {
        "value": "#CDCD00",
        "name": "yellow 3"
      },
      {
        "value": "#8B8B00",
        "name": "yellow 4"
      },
      {
        "value": "#808069",
        "name": "warmgrey"
      },
      {
        "value": "#808000",
        "vga": true,
        "css": true,
        "name": "olive"
      },
      {
        "value": "#BDB76B",
        "css": true,
        "name": "darkkhaki"
      },
      {
        "value": "#FFF68F",
        "name": "khaki 1"
      },
      {
        "value": "#EEE685",
        "name": "khaki 2"
      },
      {
        "value": "#CDC673",
        "name": "khaki 3"
      },
      {
        "value": "#8B864E",
        "name": "khaki 4"
      },
      {
        "value": "#F0E68C",
        "css": true,
        "name": "khaki"
      },
      {
        "value": "#EEE8AA",
        "css": true,
        "name": "palegoldenrod"
      },
      {
        "value": "#FFFACD",
        "name": "lemonchiffon 1"
      },
      {
        "value": "#FFFACD",
        "css": true,
        "name": "lemonchiffon"
      },
      {
        "value": "#EEE9BF",
        "name": "lemonchiffon 2"
      },
      {
        "value": "#CDC9A5",
        "name": "lemonchiffon 3"
      },
      {
        "value": "#8B8970",
        "name": "lemonchiffon 4"
      },
      {
        "value": "#FFEC8B",
        "name": "lightgoldenrod 1"
      },
      {
        "value": "#EEDC82",
        "name": "lightgoldenrod 2"
      },
      {
        "value": "#CDBE70",
        "name": "lightgoldenrod 3"
      },
      {
        "value": "#8B814C",
        "name": "lightgoldenrod 4"
      },
      {
        "value": "#E3CF57",
        "name": "banana"
      },
      {
        "value": "#FFD700",
        "name": "gold 1"
      },
      {
        "value": "#FFD700",
        "css": true,
        "name": "gold"
      },
      {
        "value": "#EEC900",
        "name": "gold 2"
      },
      {
        "value": "#CDAD00",
        "name": "gold 3"
      },
      {
        "value": "#8B7500",
        "name": "gold 4"
      },
      {
        "value": "#FFF8DC",
        "name": "cornsilk 1"
      },
      {
        "value": "#FFF8DC",
        "css": true,
        "name": "cornsilk"
      },
      {
        "value": "#EEE8CD",
        "name": "cornsilk 2"
      },
      {
        "value": "#CDC8B1",
        "name": "cornsilk 3"
      },
      {
        "value": "#8B8878",
        "name": "cornsilk 4"
      },
      {
        "value": "#DAA520",
        "css": true,
        "name": "goldenrod"
      },
      {
        "value": "#FFC125",
        "name": "goldenrod 1"
      },
      {
        "value": "#EEB422",
        "name": "goldenrod 2"
      },
      {
        "value": "#CD9B1D",
        "name": "goldenrod 3"
      },
      {
        "value": "#8B6914",
        "name": "goldenrod 4"
      },
      {
        "value": "#B8860B",
        "css": true,
        "name": "darkgoldenrod"
      },
      {
        "value": "#FFB90F",
        "name": "darkgoldenrod 1"
      },
      {
        "value": "#EEAD0E",
        "name": "darkgoldenrod 2"
      },
      {
        "value": "#CD950C",
        "name": "darkgoldenrod 3"
      },
      {
        "value": "#8B6508",
        "name": "darkgoldenrod 4"
      },
      {
        "value": "#FFA500",
        "name": "orange 1"
      },
      {
        "value": "#FF8000",
        "css": true,
        "name": "orange"
      },
      {
        "value": "#EE9A00",
        "name": "orange 2"
      },
      {
        "value": "#CD8500",
        "name": "orange 3"
      },
      {
        "value": "#8B5A00",
        "name": "orange 4"
      },
      {
        "value": "#FFFAF0",
        "css": true,
        "name": "floralwhite"
      },
      {
        "value": "#FDF5E6",
        "css": true,
        "name": "oldlace"
      },
      {
        "value": "#F5DEB3",
        "css": true,
        "name": "wheat"
      },
      {
        "value": "#FFE7BA",
        "name": "wheat 1"
      },
      {
        "value": "#EED8AE",
        "name": "wheat 2"
      },
      {
        "value": "#CDBA96",
        "name": "wheat 3"
      },
      {
        "value": "#8B7E66",
        "name": "wheat 4"
      },
      {
        "value": "#FFE4B5",
        "css": true,
        "name": "moccasin"
      },
      {
        "value": "#FFEFD5",
        "css": true,
        "name": "papayawhip"
      },
      {
        "value": "#FFEBCD",
        "css": true,
        "name": "blanchedalmond"
      },
      {
        "value": "#FFDEAD",
        "name": "navajowhite 1"
      },
      {
        "value": "#FFDEAD",
        "css": true,
        "name": "navajowhite"
      },
      {
        "value": "#EECFA1",
        "name": "navajowhite 2"
      },
      {
        "value": "#CDB38B",
        "name": "navajowhite 3"
      },
      {
        "value": "#8B795E",
        "name": "navajowhite 4"
      },
      {
        "value": "#FCE6C9",
        "name": "eggshell"
      },
      {
        "value": "#D2B48C",
        "css": true,
        "name": "tan"
      },
      {
        "value": "#9C661F",
        "name": "brick"
      },
      {
        "value": "#FF9912",
        "name": "cadmiumyellow"
      },
      {
        "value": "#FAEBD7",
        "css": true,
        "name": "antiquewhite"
      },
      {
        "value": "#FFEFDB",
        "name": "antiquewhite 1"
      },
      {
        "value": "#EEDFCC",
        "name": "antiquewhite 2"
      },
      {
        "value": "#CDC0B0",
        "name": "antiquewhite 3"
      },
      {
        "value": "#8B8378",
        "name": "antiquewhite 4"
      },
      {
        "value": "#DEB887",
        "css": true,
        "name": "burlywood"
      },
      {
        "value": "#FFD39B",
        "name": "burlywood 1"
      },
      {
        "value": "#EEC591",
        "name": "burlywood 2"
      },
      {
        "value": "#CDAA7D",
        "name": "burlywood 3"
      },
      {
        "value": "#8B7355",
        "name": "burlywood 4"
      },
      {
        "value": "#FFE4C4",
        "name": "bisque 1"
      },
      {
        "value": "#FFE4C4",
        "css": true,
        "name": "bisque"
      },
      {
        "value": "#EED5B7",
        "name": "bisque 2"
      },
      {
        "value": "#CDB79E",
        "name": "bisque 3"
      },
      {
        "value": "#8B7D6B",
        "name": "bisque 4"
      },
      {
        "value": "#E3A869",
        "name": "melon"
      },
      {
        "value": "#ED9121",
        "name": "carrot"
      },
      {
        "value": "#FF8C00",
        "css": true,
        "name": "darkorange"
      },
      {
        "value": "#FF7F00",
        "name": "darkorange 1"
      },
      {
        "value": "#EE7600",
        "name": "darkorange 2"
      },
      {
        "value": "#CD6600",
        "name": "darkorange 3"
      },
      {
        "value": "#8B4500",
        "name": "darkorange 4"
      },
      {
        "value": "#FFA54F",
        "name": "tan 1"
      },
      {
        "value": "#EE9A49",
        "name": "tan 2"
      },
      {
        "value": "#CD853F",
        "name": "tan 3"
      },
      {
        "value": "#CD853F",
        "css": true,
        "name": "peru"
      },
      {
        "value": "#8B5A2B",
        "name": "tan 4"
      },
      {
        "value": "#FAF0E6",
        "css": true,
        "name": "linen"
      },
      {
        "value": "#FFDAB9",
        "name": "peachpuff 1"
      },
      {
        "value": "#FFDAB9",
        "css": true,
        "name": "peachpuff"
      },
      {
        "value": "#EECBAD",
        "name": "peachpuff 2"
      },
      {
        "value": "#CDAF95",
        "name": "peachpuff 3"
      },
      {
        "value": "#8B7765",
        "name": "peachpuff 4"
      },
      {
        "value": "#FFF5EE",
        "name": "seashell 1"
      },
      {
        "value": "#FFF5EE",
        "css": true,
        "name": "seashell"
      },
      {
        "value": "#EEE5DE",
        "name": "seashell 2"
      },
      {
        "value": "#CDC5BF",
        "name": "seashell 3"
      },
      {
        "value": "#8B8682",
        "name": "seashell 4"
      },
      {
        "value": "#F4A460",
        "css": true,
        "name": "sandybrown"
      },
      {
        "value": "#C76114",
        "name": "rawsienna"
      },
      {
        "value": "#D2691E",
        "css": true,
        "name": "chocolate"
      },
      {
        "value": "#FF7F24",
        "name": "chocolate 1"
      },
      {
        "value": "#EE7621",
        "name": "chocolate 2"
      },
      {
        "value": "#CD661D",
        "name": "chocolate 3"
      },
      {
        "value": "#8B4513",
        "name": "chocolate 4"
      },
      {
        "value": "#8B4513",
        "css": true,
        "name": "saddlebrown"
      },
      {
        "value": "#292421",
        "name": "ivoryblack"
      },
      {
        "value": "#FF7D40",
        "name": "flesh"
      },
      {
        "value": "#FF6103",
        "name": "cadmiumorange"
      },
      {
        "value": "#8A360F",
        "name": "burntsienna"
      },
      {
        "value": "#A0522D",
        "css": true,
        "name": "sienna"
      },
      {
        "value": "#FF8247",
        "name": "sienna 1"
      },
      {
        "value": "#EE7942",
        "name": "sienna 2"
      },
      {
        "value": "#CD6839",
        "name": "sienna 3"
      },
      {
        "value": "#8B4726",
        "name": "sienna 4"
      },
      {
        "value": "#FFA07A",
        "name": "lightsalmon 1"
      },
      {
        "value": "#FFA07A",
        "css": true,
        "name": "lightsalmon"
      },
      {
        "value": "#EE9572",
        "name": "lightsalmon 2"
      },
      {
        "value": "#CD8162",
        "name": "lightsalmon 3"
      },
      {
        "value": "#8B5742",
        "name": "lightsalmon 4"
      },
      {
        "value": "#FF7F50",
        "css": true,
        "name": "coral"
      },
      {
        "value": "#FF4500",
        "name": "orangered 1"
      },
      {
        "value": "#FF4500",
        "css": true,
        "name": "orangered"
      },
      {
        "value": "#EE4000",
        "name": "orangered 2"
      },
      {
        "value": "#CD3700",
        "name": "orangered 3"
      },
      {
        "value": "#8B2500",
        "name": "orangered 4"
      },
      {
        "value": "#5E2612",
        "name": "sepia"
      },
      {
        "value": "#E9967A",
        "css": true,
        "name": "darksalmon"
      },
      {
        "value": "#FF8C69",
        "name": "salmon 1"
      },
      {
        "value": "#EE8262",
        "name": "salmon 2"
      },
      {
        "value": "#CD7054",
        "name": "salmon 3"
      },
      {
        "value": "#8B4C39",
        "name": "salmon 4"
      },
      {
        "value": "#FF7256",
        "name": "coral 1"
      },
      {
        "value": "#EE6A50",
        "name": "coral 2"
      },
      {
        "value": "#CD5B45",
        "name": "coral 3"
      },
      {
        "value": "#8B3E2F",
        "name": "coral 4"
      },
      {
        "value": "#8A3324",
        "name": "burntumber"
      },
      {
        "value": "#FF6347",
        "name": "tomato 1"
      },
      {
        "value": "#FF6347",
        "css": true,
        "name": "tomato"
      },
      {
        "value": "#EE5C42",
        "name": "tomato 2"
      },
      {
        "value": "#CD4F39",
        "name": "tomato 3"
      },
      {
        "value": "#8B3626",
        "name": "tomato 4"
      },
      {
        "value": "#FA8072",
        "css": true,
        "name": "salmon"
      },
      {
        "value": "#FFE4E1",
        "name": "mistyrose 1"
      },
      {
        "value": "#FFE4E1",
        "css": true,
        "name": "mistyrose"
      },
      {
        "value": "#EED5D2",
        "name": "mistyrose 2"
      },
      {
        "value": "#CDB7B5",
        "name": "mistyrose 3"
      },
      {
        "value": "#8B7D7B",
        "name": "mistyrose 4"
      },
      {
        "value": "#FFFAFA",
        "name": "snow 1"
      },
      {
        "value": "#FFFAFA",
        "css": true,
        "name": "snow"
      },
      {
        "value": "#EEE9E9",
        "name": "snow 2"
      },
      {
        "value": "#CDC9C9",
        "name": "snow 3"
      },
      {
        "value": "#8B8989",
        "name": "snow 4"
      },
      {
        "value": "#BC8F8F",
        "css": true,
        "name": "rosybrown"
      },
      {
        "value": "#FFC1C1",
        "name": "rosybrown 1"
      },
      {
        "value": "#EEB4B4",
        "name": "rosybrown 2"
      },
      {
        "value": "#CD9B9B",
        "name": "rosybrown 3"
      },
      {
        "value": "#8B6969",
        "name": "rosybrown 4"
      },
      {
        "value": "#F08080",
        "css": true,
        "name": "lightcoral"
      },
      {
        "value": "#CD5C5C",
        "css": true,
        "name": "indianred"
      },
      {
        "value": "#FF6A6A",
        "name": "indianred 1"
      },
      {
        "value": "#EE6363",
        "name": "indianred 2"
      },
      {
        "value": "#8B3A3A",
        "name": "indianred 4"
      },
      {
        "value": "#CD5555",
        "name": "indianred 3"
      },
      {
        "value": "#A52A2A",
        "css": true,
        "name": "brown"
      },
      {
        "value": "#FF4040",
        "name": "brown 1"
      },
      {
        "value": "#EE3B3B",
        "name": "brown 2"
      },
      {
        "value": "#CD3333",
        "name": "brown 3"
      },
      {
        "value": "#8B2323",
        "name": "brown 4"
      },
      {
        "value": "#B22222",
        "css": true,
        "name": "firebrick"
      },
      {
        "value": "#FF3030",
        "name": "firebrick 1"
      },
      {
        "value": "#EE2C2C",
        "name": "firebrick 2"
      },
      {
        "value": "#CD2626",
        "name": "firebrick 3"
      },
      {
        "value": "#8B1A1A",
        "name": "firebrick 4"
      },
      {
        "value": "#FF0000",
        "vga": true,
        "name": "red 1"
      },
      {
        "value": "#FF0000",
        "vga": true,
        "css": true,
        "name": "red"
      },
      {
        "value": "#EE0000",
        "name": "red 2"
      },
      {
        "value": "#CD0000",
        "name": "red 3"
      },
      {
        "value": "#8B0000",
        "name": "red 4"
      },
      {
        "value": "#8B0000",
        "css": true,
        "name": "darkred"
      },
      {
        "value": "#800000",
        "vga": true,
        "css": true,
        "name": "maroon"
      },
      {
        "value": "#8E388E",
        "name": "sgi beet"
      },
      {
        "value": "#7171C6",
        "name": "sgi slateblue"
      },
      {
        "value": "#7D9EC0",
        "name": "sgi lightblue"
      },
      {
        "value": "#388E8E",
        "name": "sgi teal"
      },
      {
        "value": "#71C671",
        "name": "sgi chartreuse"
      },
      {
        "value": "#8E8E38",
        "name": "sgi olivedrab"
      },
      {
        "value": "#C5C1AA",
        "name": "sgi brightgray"
      },
      {
        "value": "#C67171",
        "name": "sgi salmon"
      },
      {
        "value": "#555555",
        "name": "sgi darkgray"
      },
      {
        "value": "#1E1E1E",
        "name": "sgi gray 12"
      },
      {
        "value": "#282828",
        "name": "sgi gray 16"
      },
      {
        "value": "#515151",
        "name": "sgi gray 32"
      },
      {
        "value": "#5B5B5B",
        "name": "sgi gray 36"
      },
      {
        "value": "#848484",
        "name": "sgi gray 52"
      },
      {
        "value": "#8E8E8E",
        "name": "sgi gray 56"
      },
      {
        "value": "#AAAAAA",
        "name": "sgi lightgray"
      },
      {
        "value": "#B7B7B7",
        "name": "sgi gray 72"
      },
      {
        "value": "#C1C1C1",
        "name": "sgi gray 76"
      },
      {
        "value": "#EAEAEA",
        "name": "sgi gray 92"
      },
      {
        "value": "#F4F4F4",
        "name": "sgi gray 96"
      },
      {
        "value": "#FFFFFF",
        "vga": true,
        "css": true,
        "name": "white"
      },
      {
        "value": "#F5F5F5",
        "name": "white smoke"
      },
      {
        "value": "#F5F5F5",
        "name": "gray 96"
      },
      {
        "value": "#DCDCDC",
        "css": true,
        "name": "gainsboro"
      },
      {
        "value": "#D3D3D3",
        "css": true,
        "name": "lightgrey"
      },
      {
        "value": "#C0C0C0",
        "vga": true,
        "css": true,
        "name": "silver"
      },
      {
        "value": "#A9A9A9",
        "css": true,
        "name": "darkgray"
      },
      {
        "value": "#808080",
        "vga": true,
        "css": true,
        "name": "gray"
      },
      {
        "value": "#696969",
        "css": true,
        "name": "dimgray"
      },
      {
        "value": "#696969",
        "name": "gray 42"
      },
      {
        "value": "#000000",
        "vga": true,
        "css": true,
        "name": "black"
      },
      {
        "value": "#FCFCFC",
        "name": "gray 99"
      },
      {
        "value": "#FAFAFA",
        "name": "gray 98"
      },
      {
        "value": "#F7F7F7",
        "name": "gray 97"
      },
      {
        "value": "#F2F2F2",
        "name": "gray 95"
      },
      {
        "value": "#F0F0F0",
        "name": "gray 94"
      },
      {
        "value": "#EDEDED",
        "name": "gray 93"
      },
      {
        "value": "#EBEBEB",
        "name": "gray 92"
      },
      {
        "value": "#E8E8E8",
        "name": "gray 91"
      },
      {
        "value": "#E5E5E5",
        "name": "gray 90"
      },
      {
        "value": "#E3E3E3",
        "name": "gray 89"
      },
      {
        "value": "#E0E0E0",
        "name": "gray 88"
      },
      {
        "value": "#DEDEDE",
        "name": "gray 87"
      },
      {
        "value": "#DBDBDB",
        "name": "gray 86"
      },
      {
        "value": "#D9D9D9",
        "name": "gray 85"
      },
      {
        "value": "#D6D6D6",
        "name": "gray 84"
      },
      {
        "value": "#D4D4D4",
        "name": "gray 83"
      },
      {
        "value": "#D1D1D1",
        "name": "gray 82"
      },
      {
        "value": "#CFCFCF",
        "name": "gray 81"
      },
      {
        "value": "#CCCCCC",
        "name": "gray 80"
      },
      {
        "value": "#C9C9C9",
        "name": "gray 79"
      },
      {
        "value": "#C7C7C7",
        "name": "gray 78"
      },
      {
        "value": "#C4C4C4",
        "name": "gray 77"
      },
      {
        "value": "#C2C2C2",
        "name": "gray 76"
      },
      {
        "value": "#BFBFBF",
        "name": "gray 75"
      },
      {
        "value": "#BDBDBD",
        "name": "gray 74"
      },
      {
        "value": "#BABABA",
        "name": "gray 73"
      },
      {
        "value": "#B8B8B8",
        "name": "gray 72"
      },
      {
        "value": "#B5B5B5",
        "name": "gray 71"
      },
      {
        "value": "#B3B3B3",
        "name": "gray 70"
      },
      {
        "value": "#B0B0B0",
        "name": "gray 69"
      },
      {
        "value": "#ADADAD",
        "name": "gray 68"
      },
      {
        "value": "#ABABAB",
        "name": "gray 67"
      },
      {
        "value": "#A8A8A8",
        "name": "gray 66"
      },
      {
        "value": "#A6A6A6",
        "name": "gray 65"
      },
      {
        "value": "#A3A3A3",
        "name": "gray 64"
      },
      {
        "value": "#A1A1A1",
        "name": "gray 63"
      },
      {
        "value": "#9E9E9E",
        "name": "gray 62"
      },
      {
        "value": "#9C9C9C",
        "name": "gray 61"
      },
      {
        "value": "#999999",
        "name": "gray 60"
      },
      {
        "value": "#969696",
        "name": "gray 59"
      },
      {
        "value": "#949494",
        "name": "gray 58"
      },
      {
        "value": "#919191",
        "name": "gray 57"
      },
      {
        "value": "#8F8F8F",
        "name": "gray 56"
      },
      {
        "value": "#8C8C8C",
        "name": "gray 55"
      },
      {
        "value": "#8A8A8A",
        "name": "gray 54"
      },
      {
        "value": "#878787",
        "name": "gray 53"
      },
      {
        "value": "#858585",
        "name": "gray 52"
      },
      {
        "value": "#828282",
        "name": "gray 51"
      },
      {
        "value": "#7F7F7F",
        "name": "gray 50"
      },
      {
        "value": "#7D7D7D",
        "name": "gray 49"
      },
      {
        "value": "#7A7A7A",
        "name": "gray 48"
      },
      {
        "value": "#787878",
        "name": "gray 47"
      },
      {
        "value": "#757575",
        "name": "gray 46"
      },
      {
        "value": "#737373",
        "name": "gray 45"
      },
      {
        "value": "#707070",
        "name": "gray 44"
      },
      {
        "value": "#6E6E6E",
        "name": "gray 43"
      },
      {
        "value": "#666666",
        "name": "gray 40"
      },
      {
        "value": "#636363",
        "name": "gray 39"
      },
      {
        "value": "#616161",
        "name": "gray 38"
      },
      {
        "value": "#5E5E5E",
        "name": "gray 37"
      },
      {
        "value": "#5C5C5C",
        "name": "gray 36"
      },
      {
        "value": "#595959",
        "name": "gray 35"
      },
      {
        "value": "#575757",
        "name": "gray 34"
      },
      {
        "value": "#545454",
        "name": "gray 33"
      },
      {
        "value": "#525252",
        "name": "gray 32"
      },
      {
        "value": "#4F4F4F",
        "name": "gray 31"
      },
      {
        "value": "#4D4D4D",
        "name": "gray 30"
      },
      {
        "value": "#4A4A4A",
        "name": "gray 29"
      },
      {
        "value": "#474747",
        "name": "gray 28"
      },
      {
        "value": "#454545",
        "name": "gray 27"
      },
      {
        "value": "#424242",
        "name": "gray 26"
      },
      {
        "value": "#404040",
        "name": "gray 25"
      },
      {
        "value": "#3D3D3D",
        "name": "gray 24"
      },
      {
        "value": "#3B3B3B",
        "name": "gray 23"
      },
      {
        "value": "#383838",
        "name": "gray 22"
      },
      {
        "value": "#363636",
        "name": "gray 21"
      },
      {
        "value": "#333333",
        "name": "gray 20"
      },
      {
        "value": "#303030",
        "name": "gray 19"
      },
      {
        "value": "#2E2E2E",
        "name": "gray 18"
      },
      {
        "value": "#2B2B2B",
        "name": "gray 17"
      },
      {
        "value": "#292929",
        "name": "gray 16"
      },
      {
        "value": "#262626",
        "name": "gray 15"
      },
      {
        "value": "#242424",
        "name": "gray 14"
      },
      {
        "value": "#212121",
        "name": "gray 13"
      },
      {
        "value": "#1F1F1F",
        "name": "gray 12"
      },
      {
        "value": "#1C1C1C",
        "name": "gray 11"
      },
      {
        "value": "#1A1A1A",
        "name": "gray 10"
      },
      {
        "value": "#171717",
        "name": "gray 9"
      },
      {
        "value": "#141414",
        "name": "gray 8"
      },
      {
        "value": "#121212",
        "name": "gray 7"
      },
      {
        "value": "#0F0F0F",
        "name": "gray 6"
      },
      {
        "value": "#0D0D0D",
        "name": "gray 5"
      },
      {
        "value": "#0A0A0A",
        "name": "gray 4"
      },
      {
        "value": "#080808",
        "name": "gray 3"
      },
      {
        "value": "#050505",
        "name": "gray 2"
      },
      {
        "value": "#030303",
        "name": "gray 1"
      },
      {
        "value": "#F5F5F5",
        "css": true,
        "name": "whitesmoke"
      }
    ];
  }
});

// node_modules/.pnpm/colornames@1.1.1/node_modules/colornames/index.js
var require_colornames = __commonJS({
  "node_modules/.pnpm/colornames@1.1.1/node_modules/colornames/index.js"(exports, module2) {
    var colors = require_colors();
    var cssColors = colors.filter(function(color) {
      return !!color.css;
    });
    var vgaColors = colors.filter(function(color) {
      return !!color.vga;
    });
    module2.exports = function(name) {
      var color = module2.exports.get(name);
      return color && color.value;
    };
    module2.exports.get = function(name) {
      name = name || "";
      name = name.trim().toLowerCase();
      return colors.filter(function(color) {
        return color.name.toLowerCase() === name;
      }).pop();
    };
    module2.exports.all = module2.exports.get.all = function() {
      return colors;
    };
    module2.exports.get.css = function(name) {
      if (!name) return cssColors;
      name = name || "";
      name = name.trim().toLowerCase();
      return cssColors.filter(function(color) {
        return color.name.toLowerCase() === name;
      }).pop();
    };
    module2.exports.get.vga = function(name) {
      if (!name) return vgaColors;
      name = name || "";
      name = name.trim().toLowerCase();
      return vgaColors.filter(function(color) {
        return color.name.toLowerCase() === name;
      }).pop();
    };
  }
});

// node_modules/.pnpm/parse-unit@1.0.1/node_modules/parse-unit/index.js
var require_parse_unit = __commonJS({
  "node_modules/.pnpm/parse-unit@1.0.1/node_modules/parse-unit/index.js"(exports, module2) {
    module2.exports = function parseUnit2(str, out) {
      if (!out)
        out = [0, ""];
      str = String(str);
      var num = parseFloat(str, 10);
      out[0] = num;
      out[1] = str.match(/[\d.\-\+]*\s*(.*)/)[1] || "";
      return out;
    };
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/index.js
var spinners_exports = {};
__export(spinners_exports, {
  VueSpinner: () => vueSpinner,
  VueSpinnerAudio: () => vue_spinner_audio_default,
  VueSpinnerBall: () => vue_spinner_ball_default,
  VueSpinnerBar: () => vueSpinnerBar,
  VueSpinnerBars: () => vue_spinner_bars_default,
  VueSpinnerBeat: () => vueSpinnerBeat,
  VueSpinnerBounce: () => vueSpinnerBounce,
  VueSpinnerBox: () => vue_spinner_box_default,
  VueSpinnerCircle: () => vueSpinnerCircle,
  VueSpinnerClimbingBox: () => vueSpinnerClimbingBox,
  VueSpinnerClip: () => vueSpinnerClip,
  VueSpinnerClock: () => vue_spinner_clock_default,
  VueSpinnerComment: () => vue_spinner_comment_default,
  VueSpinnerCore: () => vue_spinner_core_default,
  VueSpinnerDot: () => vueSpinnerDot,
  VueSpinnerDots: () => vue_spinner_dots_default,
  VueSpinnerFacebook: () => vue_spinner_facebook_default,
  VueSpinnerFade: () => vueSpinnerFade,
  VueSpinnerGears: () => vue_spinner_gears_default,
  VueSpinnerGrid: () => vue_spinner_grid_default,
  VueSpinnerGridPop: () => vueSpinnerGridPop,
  VueSpinnerHearts: () => vue_spinner_hearts_default,
  VueSpinnerHourglass: () => vue_spinner_hourglass_default,
  VueSpinnerInfinity: () => vue_spinner_infinity_default,
  VueSpinnerIos: () => vue_spinner_ios_default,
  VueSpinnerMoon: () => vueSpinnerMoon,
  VueSpinnerOrbit: () => vue_spinner_orbit_default,
  VueSpinnerOval: () => vue_spinner_oval_default,
  VueSpinnerPacman: () => vueSpinnerPacman,
  VueSpinnerPie: () => vue_spinner_pie_default,
  VueSpinnerPropagate: () => vueSpinnerPropagate,
  VueSpinnerPuff: () => vue_spinner_puff_default,
  VueSpinnerPulse: () => vueSpinnerPulse,
  VueSpinnerRadio: () => vue_spinner_radio_default,
  VueSpinnerRing: () => vueSpinnerRing,
  VueSpinnerRings: () => vue_spinner_rings_default,
  VueSpinnerRise: () => vueSpinnerRise,
  VueSpinnerRotate: () => vueSpinnerRotate,
  VueSpinnerScale: () => vueSpinnerScale,
  VueSpinnerSkew: () => vueSpinnerSkew,
  VueSpinnerSquare: () => vueSpinnerSquare,
  VueSpinnerSync: () => vueSpinnerSync,
  VueSpinnerTail: () => vue_spinner_tail_default
});

// node_modules/.pnpm/outdent@0.8.0/node_modules/outdent/lib-module/index.js
function noop() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
}
function createWeakMap() {
  if (typeof WeakMap !== "undefined") {
    return /* @__PURE__ */ new WeakMap();
  } else {
    return fakeSetOrMap();
  }
}
function fakeSetOrMap() {
  return {
    add: noop,
    delete: noop,
    get: noop,
    set: noop,
    has: function(k) {
      return false;
    }
  };
}
var hop = Object.prototype.hasOwnProperty;
var has = function(obj, prop) {
  return hop.call(obj, prop);
};
function extend(target, source) {
  for (var prop in source) {
    if (has(source, prop)) {
      target[prop] = source[prop];
    }
  }
  return target;
}
var reLeadingNewline = /^[ \t]*(?:\r\n|\r|\n)/;
var reTrailingNewline = /(?:\r\n|\r|\n)[ \t]*$/;
var reStartsWithNewlineOrIsEmpty = /^(?:[\r\n]|$)/;
var reDetectIndentation = /(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/;
var reOnlyWhitespaceWithAtLeastOneNewline = /^[ \t]*[\r\n][ \t\r\n]*$/;
function _outdentArray(strings, firstInterpolatedValueSetsIndentationLevel, options) {
  var indentationLevel = 0;
  var match = strings[0].match(reDetectIndentation);
  if (match) {
    indentationLevel = match[1].length;
  }
  var reSource = "(\\r\\n|\\r|\\n).{0," + indentationLevel + "}";
  var reMatchIndent = new RegExp(reSource, "g");
  if (firstInterpolatedValueSetsIndentationLevel) {
    strings = strings.slice(1);
  }
  var newline = options.newline, trimLeadingNewline = options.trimLeadingNewline, trimTrailingNewline = options.trimTrailingNewline;
  var normalizeNewlines = typeof newline === "string";
  var l = strings.length;
  var outdentedStrings = strings.map(function(v, i) {
    v = v.replace(reMatchIndent, "$1");
    if (i === 0 && trimLeadingNewline) {
      v = v.replace(reLeadingNewline, "");
    }
    if (i === l - 1 && trimTrailingNewline) {
      v = v.replace(reTrailingNewline, "");
    }
    if (normalizeNewlines) {
      v = v.replace(/\r\n|\n|\r/g, function(_) {
        return newline;
      });
    }
    return v;
  });
  return outdentedStrings;
}
function concatStringsAndValues(strings, values) {
  var ret = "";
  for (var i = 0, l = strings.length; i < l; i++) {
    ret += strings[i];
    if (i < l - 1) {
      ret += values[i];
    }
  }
  return ret;
}
function isTemplateStringsArray(v) {
  return has(v, "raw") && has(v, "length");
}
function createInstance(options) {
  var arrayAutoIndentCache = createWeakMap();
  var arrayFirstInterpSetsIndentCache = createWeakMap();
  function outdent(stringsOrOptions) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      values[_i - 1] = arguments[_i];
    }
    if (isTemplateStringsArray(stringsOrOptions)) {
      var strings = stringsOrOptions;
      var firstInterpolatedValueSetsIndentationLevel = (values[0] === outdent || values[0] === defaultOutdent) && reOnlyWhitespaceWithAtLeastOneNewline.test(strings[0]) && reStartsWithNewlineOrIsEmpty.test(strings[1]);
      var cache = firstInterpolatedValueSetsIndentationLevel ? arrayFirstInterpSetsIndentCache : arrayAutoIndentCache;
      var renderedArray = cache.get(strings);
      if (!renderedArray) {
        renderedArray = _outdentArray(strings, firstInterpolatedValueSetsIndentationLevel, options);
        cache.set(strings, renderedArray);
      }
      if (values.length === 0) {
        return renderedArray[0];
      }
      var rendered = concatStringsAndValues(renderedArray, firstInterpolatedValueSetsIndentationLevel ? values.slice(1) : values);
      return rendered;
    } else {
      return createInstance(extend(extend({}, options), stringsOrOptions || {}));
    }
  }
  var fullOutdent = extend(outdent, {
    string: function(str) {
      return _outdentArray([str], false, options)[0];
    }
  });
  return fullOutdent;
}
var defaultOutdent = createInstance({
  trimLeadingNewline: true,
  trimTrailingNewline: true
});
if (typeof module !== "undefined") {
  try {
    module.exports = defaultOutdent;
    Object.defineProperty(defaultOutdent, "__esModule", { value: true });
    defaultOutdent.default = defaultOutdent;
    defaultOutdent.outdent = defaultOutdent;
  } catch (e22) {
  }
}

// node_modules/.pnpm/style-inject@0.3.0/node_modules/style-inject/dist/style-inject.es.js
function styleInject(css22, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;
  if (!css22 || typeof document === "undefined") {
    return;
  }
  var head = document.head || document.getElementsByTagName("head")[0];
  var style = document.createElement("style");
  style.type = "text/css";
  if (insertAt === "top") {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css22;
  } else {
    style.appendChild(document.createTextNode(css22));
  }
}
var style_inject_es_default = styleInject;

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/utils/use-spinner.js
var spinnerProps = {
  size: {
    type: [Number, String],
    default: "1em"
  },
  color: String
};
var isStyleInjected = false;
function useSpinner(props) {
  if (!isStyleInjected) {
    const spinnerCSS = defaultOutdent`
			.vue-spinner {
				vertical-align: middle;
			}
		`;
    style_inject_es_default(spinnerCSS);
    isStyleInjected = true;
  }
  return {
    cSize: computed(() => props.size),
    classes: computed(() => "vue-spinner"),
    style: computed(() => ({ color: props.color }))
  };
}

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner.vue.js
var e = [];
var t = [];
function n(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e.indexOf(i);
      -1 === u && (u = e.push(i) - 1, t[u] = {}), a = t[u] && t[u][s] ? t[u][s] : t[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css = "\n.vue-spinner-mat {\n	animation: vue-spinner-spin 2s linear infinite;\n	transform-origin: center center;\n}\n.vue-spinner-mat .path {\n	stroke-dasharray: 1, 200;\n	stroke-dashoffset: 0;\n	animation: vue-spinner-mat-dash 1.5s ease-in-out infinite;\n}\n@keyframes vue-spinner-spin {\n0% {\n		transform: rotate3d(0, 0, 1, 0deg);\n}\n25% {\n		transform: rotate3d(0, 0, 1, 90deg);\n}\n50% {\n		transform: rotate3d(0, 0, 1, 180deg);\n}\n75% {\n		transform: rotate3d(0, 0, 1, 270deg);\n}\n100% {\n		transform: rotate3d(0, 0, 1, 359deg);\n}\n}\n@keyframes vue-spinner-mat-dash {\n0% {\n		stroke-dasharray: 1, 200;\n		stroke-dashoffset: 0;\n}\n50% {\n		stroke-dasharray: 89, 200;\n		stroke-dashoffset: -35px;\n}\n100% {\n		stroke-dasharray: 89, 200;\n		stroke-dashoffset: -124px;\n}\n}\n";
n(css, {});
var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var _sfc_main = defineComponent({
  name: "VueSpinner",
  props: {
    ...spinnerProps,
    thickness: {
      type: Number,
      default: 5
    }
  },
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value + " vue-spinner-mat",
      width: cSize.value,
      height: cSize.value,
      viewBox: "25 25 50 50"
    }, [
      h("circle", {
        class: "path",
        cx: "50",
        cy: "50",
        r: "20",
        fill: "none",
        stroke: "currentColor",
        "stroke-width": props.thickness,
        "stroke-miterlimit": "10"
      })
    ]);
  }
});
var vueSpinner = _export_sfc(_sfc_main, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-audio.js
var svg = [
  h("g", {
    transform: "matrix(1 0 0 -1 0 80)"
  }, [
    h("rect", {
      width: "10",
      height: "20",
      rx: "3"
    }, [
      h("animate", {
        attributeName: "height",
        begin: "0s",
        dur: "4.3s",
        values: "20;45;57;80;64;32;66;45;64;23;66;13;64;56;34;34;2;23;76;79;20",
        calcMode: "linear",
        repeatCount: "indefinite"
      })
    ]),
    h("rect", {
      x: "15",
      width: "10",
      height: "80",
      rx: "3"
    }, [
      h("animate", {
        attributeName: "height",
        begin: "0s",
        dur: "2s",
        values: "80;55;33;5;75;23;73;33;12;14;60;80",
        calcMode: "linear",
        repeatCount: "indefinite"
      })
    ]),
    h("rect", {
      x: "30",
      width: "10",
      height: "50",
      rx: "3"
    }, [
      h("animate", {
        attributeName: "height",
        begin: "0s",
        dur: "1.4s",
        values: "50;34;78;23;56;23;34;76;80;54;21;50",
        calcMode: "linear",
        repeatCount: "indefinite"
      })
    ]),
    h("rect", {
      x: "45",
      width: "10",
      height: "30",
      rx: "3"
    }, [
      h("animate", {
        attributeName: "height",
        begin: "0s",
        dur: "2s",
        values: "30;45;13;80;56;72;45;76;34;23;67;30",
        calcMode: "linear",
        repeatCount: "indefinite"
      })
    ])
  ])
];
var vue_spinner_audio_default = defineComponent({
  name: "VueSpinnerAudio",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      fill: "currentColor",
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 55 80",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-ball.js
var svg2 = [
  h("g", {
    transform: "translate(1 1)",
    "stroke-width": "2",
    fill: "none",
    "fill-rule": "evenodd"
  }, [
    h("circle", {
      cx: "5",
      cy: "50",
      r: "5"
    }, [
      h("animate", {
        attributeName: "cy",
        begin: "0s",
        dur: "2.2s",
        values: "50;5;50;50",
        calcMode: "linear",
        repeatCount: "indefinite"
      }),
      h("animate", {
        attributeName: "cx",
        begin: "0s",
        dur: "2.2s",
        values: "5;27;49;5",
        calcMode: "linear",
        repeatCount: "indefinite"
      })
    ]),
    h("circle", {
      cx: "27",
      cy: "5",
      r: "5"
    }, [
      h("animate", {
        attributeName: "cy",
        begin: "0s",
        dur: "2.2s",
        from: "5",
        to: "5",
        values: "5;50;50;5",
        calcMode: "linear",
        repeatCount: "indefinite"
      }),
      h("animate", {
        attributeName: "cx",
        begin: "0s",
        dur: "2.2s",
        from: "27",
        to: "27",
        values: "27;49;5;27",
        calcMode: "linear",
        repeatCount: "indefinite"
      })
    ]),
    h("circle", {
      cx: "49",
      cy: "50",
      r: "5"
    }, [
      h("animate", {
        attributeName: "cy",
        begin: "0s",
        dur: "2.2s",
        values: "50;50;5;50",
        calcMode: "linear",
        repeatCount: "indefinite"
      }),
      h("animate", {
        attributeName: "cx",
        from: "49",
        to: "49",
        begin: "0s",
        dur: "2.2s",
        values: "49;5;27;49",
        calcMode: "linear",
        repeatCount: "indefinite"
      })
    ])
  ])
];
var vue_spinner_ball_default = defineComponent({
  name: "VueSpinnerBall",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      stroke: "currentColor",
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 57 57",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg2);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/utils/props.js
function useSpinnerProps(props) {
  const defaultProps = {
    color: {
      type: String,
      default: "#000000"
    }
  };
  const optionalProps = {
    size: {
      type: [String, Number],
      default: props.size
    },
    margin: { type: String, default: props.margin },
    height: { type: [String, Number], default: props.height },
    width: { type: [String, Number], default: props.width },
    radius: { type: [String, Number], default: props.radius }
  };
  const actualProps = { ...defaultProps };
  for (const prop of Object.keys(props)) {
    actualProps[prop] = optionalProps[prop];
  }
  return actualProps;
}

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/utils/rgba.js
var import_colornames = __toESM(require_colornames(), 1);
var calculateRgba = (input, opacity) => {
  let color = "";
  const colorNameHex = (0, import_colornames.default)(input);
  if (colorNameHex !== void 0) {
    color = colorNameHex.slice(1);
  } else if (input.startsWith(`#`)) {
    color = input.slice(1);
  }
  if (color.length === 3) {
    let res = "";
    for (const c of color) {
      res += c;
      res += c;
    }
    color = res;
  }
  const rgbParts = color.match(/.{2}/g);
  if (rgbParts === null) {
    throw new Error(`Could not identify RGB value of color \`${input}\``);
  }
  const rgbValues = rgbParts.map((hex) => Number.parseInt(hex, 16)).join(`, `);
  return `rgba(${rgbValues}, ${opacity})`;
};

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/utils/size.js
var import_parse_unit = __toESM(require_parse_unit(), 1);
function useSize(sizeGetter) {
  return computed(() => {
    const sizeProp = sizeGetter();
    let [value, unit] = (0, import_parse_unit.default)(String(sizeProp));
    unit = unit === void 0 || unit === "" ? "px" : unit;
    return {
      value,
      unit,
      string: `${value}${unit}`
    };
  });
}

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-bar.vue.js
var e2 = [];
var t2 = [];
function n2(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e2.indexOf(i);
      -1 === u && (u = e2.push(i) - 1, t2[u] = {}), a = t2[u] && t2[u][s] ? t2[u][s] : t2[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css2 = "\n@keyframes vue-spinner-long {\n0% {\n		left: -35%;\n		right: 100%;\n}\n60% {\n		left: 100%;\n		right: -90%;\n}\n100% {\n		left: 100%;\n		right: -90%;\n}\n}\n@keyframes vue-spinner-short {\n0% {\n		left: -200%;\n		right: 100%;\n}\n60% {\n		left: 107%;\n		right: -8%;\n}\n100% {\n		left: 107%;\n		right: -8%;\n}\n}\n";
n2(css2, {});
var _export_sfc2 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__ = { name: "VueSpinnerBar" };
var _sfc_main2 = defineComponent({
  ...__default__,
  props: useSpinnerProps({ height: 4, width: 100 }),
  setup(__props) {
    const width = useSize(() => __props.width);
    const height = useSize(() => __props.height);
    const wrapperStyle = computed(() => ({
      position: "relative",
      width: width.value.string,
      height: height.value.string,
      overflow: "hidden",
      backgroundColor: calculateRgba(__props.color, 0.2),
      backgroundClip: "padding-box"
    }));
    const getBarStyle = (version) => ({
      position: "absolute",
      height: height.value.string,
      overflow: "hidden",
      backgroundColor: __props.color,
      backgroundClip: "padding-box",
      display: "block",
      borderRadius: "2px",
      willChange: "left, right",
      animationFillMode: "forwards",
      animation: ` ${version === 1 ? "vue-spinner-long" : "vue-spinner-short"} 2.1s ${version === 2 ? `1.15s` : ``} ${version === 1 ? `cubic-bezier(0.65, 0.815, 0.735, 0.395)` : `cubic-bezier(0.165, 0.84, 0.44, 1)`} infinite`
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(wrapperStyle.value)
      }, [
        (openBlock(), createElementBlock(Fragment, null, renderList(2, (n22) => {
          return createBaseVNode("div", {
            key: n22,
            style: normalizeStyle(getBarStyle(n22))
          }, null, 4);
        }), 64))
      ], 4);
    };
  }
});
var vueSpinnerBar = _export_sfc2(_sfc_main2, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-bar.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-bars.js
var svg3 = [
  h("rect", {
    y: "10",
    width: "15",
    height: "120",
    rx: "6"
  }, [
    h("animate", {
      attributeName: "height",
      begin: "0.5s",
      dur: "1s",
      values: "120;110;100;90;80;70;60;50;40;140;120",
      calcMode: "linear",
      repeatCount: "indefinite"
    }),
    h("animate", {
      attributeName: "y",
      begin: "0.5s",
      dur: "1s",
      values: "10;15;20;25;30;35;40;45;50;0;10",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("rect", {
    x: "30",
    y: "10",
    width: "15",
    height: "120",
    rx: "6"
  }, [
    h("animate", {
      attributeName: "height",
      begin: "0.25s",
      dur: "1s",
      values: "120;110;100;90;80;70;60;50;40;140;120",
      calcMode: "linear",
      repeatCount: "indefinite"
    }),
    h("animate", {
      attributeName: "y",
      begin: "0.25s",
      dur: "1s",
      values: "10;15;20;25;30;35;40;45;50;0;10",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("rect", {
    x: "60",
    width: "15",
    height: "140",
    rx: "6"
  }, [
    h("animate", {
      attributeName: "height",
      begin: "0s",
      dur: "1s",
      values: "120;110;100;90;80;70;60;50;40;140;120",
      calcMode: "linear",
      repeatCount: "indefinite"
    }),
    h("animate", {
      attributeName: "y",
      begin: "0s",
      dur: "1s",
      values: "10;15;20;25;30;35;40;45;50;0;10",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("rect", {
    x: "90",
    y: "10",
    width: "15",
    height: "120",
    rx: "6"
  }, [
    h("animate", {
      attributeName: "height",
      begin: "0.25s",
      dur: "1s",
      values: "120;110;100;90;80;70;60;50;40;140;120",
      calcMode: "linear",
      repeatCount: "indefinite"
    }),
    h("animate", {
      attributeName: "y",
      begin: "0.25s",
      dur: "1s",
      values: "10;15;20;25;30;35;40;45;50;0;10",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("rect", {
    x: "120",
    y: "10",
    width: "15",
    height: "120",
    rx: "6"
  }, [
    h("animate", {
      attributeName: "height",
      begin: "0.5s",
      dur: "1s",
      values: "120;110;100;90;80;70;60;50;40;140;120",
      calcMode: "linear",
      repeatCount: "indefinite"
    }),
    h("animate", {
      attributeName: "y",
      begin: "0.5s",
      dur: "1s",
      values: "10;15;20;25;30;35;40;45;50;0;10",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ])
];
var vue_spinner_bars_default = defineComponent({
  name: "VueSpinnerBars",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      fill: "currentColor",
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 135 140",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg3);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-beat.vue.js
var e3 = [];
var t3 = [];
function n3(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e3.indexOf(i);
      -1 === u && (u = e3.push(i) - 1, t3[u] = {}), a = t3[u] && t3[u][s] ? t3[u][s] : t3[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css3 = "\n@keyframes vue-spinner-beat {\n50% {\n		transform: scale(0.75);\n		opacity: 0.2;\n}\n100% {\n		transform: scale(1);\n		opacity: 1;\n}\n}\n";
n3(css3, {});
var _export_sfc3 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var _sfc_main3 = defineComponent({
  props: useSpinnerProps({ size: 15, margin: "2px" }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const margin = useSize(() => __props.margin);
    const getCircleStyle = (version) => ({
      animation: `vue-spinner-beat 0.7s ${version % 2 ? `0s` : `0.35s`} infinite linear`,
      display: "inline-block",
      backgroundColor: __props.color,
      width: size.value.string,
      height: size.value.string,
      margin: margin.value.string,
      borderRadius: "100%",
      animationFillMode: "both"
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        (openBlock(), createElementBlock(Fragment, null, renderList(3, (n22) => {
          return createBaseVNode("div", {
            key: n22,
            style: normalizeStyle(getCircleStyle(n22))
          }, null, 4);
        }), 64))
      ]);
    };
  }
});
var vueSpinnerBeat = _export_sfc3(_sfc_main3, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-beat.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-bounce.vue.js
var e4 = [];
var t4 = [];
function n4(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e4.indexOf(i);
      -1 === u && (u = e4.push(i) - 1, t4[u] = {}), a = t4[u] && t4[u][s] ? t4[u][s] : t4[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css4 = "\n@keyframes vue-spinner-bounce {\n0%,\n	100% {\n		transform: scale(0);\n}\n50% {\n		transform: scale(1);\n}\n}\n";
n4(css4, {});
var _export_sfc4 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__2 = { name: "VueSpinnerBeat" };
var _sfc_main4 = defineComponent({
  ...__default__2,
  props: useSpinnerProps({ size: 60 }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const getCircleStyle = (version) => ({
      position: "absolute",
      width: size.value.string,
      height: size.value.string,
      backgroundColor: __props.color,
      borderRadius: "100%",
      opacity: 0.6,
      top: 0,
      left: 0,
      animationFillMode: "both",
      animation: `vue-spinner-bounce 2.1s ${version === 1 ? `1s` : `0s`} infinite ease-in-out`
    });
    const wrapperStyle = computed(() => ({
      position: "relative",
      width: size.value.string,
      height: size.value.string
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(wrapperStyle.value)
      }, [
        (openBlock(), createElementBlock(Fragment, null, renderList(2, (n22) => {
          return createBaseVNode("div", {
            key: n22,
            style: normalizeStyle(getCircleStyle(n22))
          }, null, 4);
        }), 64))
      ], 4);
    };
  }
});
var vueSpinnerBounce = _export_sfc4(_sfc_main4, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-bounce.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-box.js
var svg4 = [
  h("rect", {
    x: "25",
    y: "25",
    width: "50",
    height: "50",
    fill: "none",
    "stroke-width": "4",
    stroke: "currentColor"
  }, [
    h("animateTransform", {
      id: "spinnerBox",
      attributeName: "transform",
      type: "rotate",
      from: "0 50 50",
      to: "180 50 50",
      dur: "0.5s",
      begin: "rectBox.end"
    })
  ]),
  h("rect", {
    x: "27",
    y: "27",
    width: "46",
    height: "50",
    fill: "currentColor"
  }, [
    h("animate", {
      id: "rectBox",
      attributeName: "height",
      begin: "0s;spinnerBox.end",
      dur: "1.3s",
      from: "50",
      to: "0",
      fill: "freeze"
    })
  ])
];
var vue_spinner_box_default = defineComponent({
  name: "VueSpinnerBox",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg4);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-circle.vue.js
var e5 = [];
var t5 = [];
function n5(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e5.indexOf(i);
      -1 === u && (u = e5.push(i) - 1, t5[u] = {}), a = t5[u] && t5[u][s] ? t5[u][s] : t5[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css5 = "\n@keyframes vue-spinner-circle {\n0% {\n		transform: rotate(0deg);\n}\n50% {\n		transform: rotate(180deg);\n}\n100% {\n		transform: rotate(360deg);\n}\n}\n";
n5(css5, {});
var _export_sfc5 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__3 = { name: "VueSpinnerCircle" };
var _sfc_main5 = defineComponent({
  ...__default__3,
  props: useSpinnerProps({ size: 50 }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const getRingStyle = (version) => ({
      position: "absolute",
      border: `1px solid ${__props.color}`,
      borderRadius: "100%",
      transition: "2s",
      borderBottom: "none",
      borderRight: "none",
      animationFillMode: "",
      height: `${size.value.value * (1 - version / 10)}${size.value.unit}`,
      width: `${size.value.value * (1 - version / 10)}${size.value.unit}`,
      top: `${version * 0.7 * 2.5}%`,
      left: `${version * 0.35 * 2.5}%`,
      animation: `vue-spinner-circle 1s ${version * 0.2}s infinite linear`
    });
    const wrapperStyle = computed(() => ({
      position: "relative",
      width: size.value.string,
      height: size.value.string
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(wrapperStyle.value)
      }, [
        (openBlock(), createElementBlock(Fragment, null, renderList(5, (i) => {
          return createBaseVNode("div", {
            key: i,
            style: normalizeStyle(getRingStyle(i))
          }, null, 4);
        }), 64))
      ], 4);
    };
  }
});
var vueSpinnerCircle = _export_sfc5(_sfc_main5, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-circle.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-climbing-box.vue.js
var e6 = [];
var t6 = [];
function n6(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e6.indexOf(i);
      -1 === u && (u = e6.push(i) - 1, t6[u] = {}), a = t6[u] && t6[u][s] ? t6[u][s] : t6[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css6 = "\n@keyframes vue-spinner-climbing-box {\n0% {\n		transform: translate(0, -1em) rotate(-45deg);\n}\n5% {\n		transform: translate(0, -1em) rotate(-50deg);\n}\n20% {\n		transform: translate(1em, -2em) rotate(47deg);\n}\n25% {\n		transform: translate(1em, -2em) rotate(45deg);\n}\n30% {\n		transform: translate(1em, -2em) rotate(40deg);\n}\n45% {\n		transform: translate(2em, -3em) rotate(137deg);\n}\n50% {\n		transform: translate(2em, -3em) rotate(135deg);\n}\n55% {\n		transform: translate(2em, -3em) rotate(130deg);\n}\n70% {\n		transform: translate(3em, -4em) rotate(217deg);\n}\n75% {\n		transform: translate(3em, -4em) rotate(220deg);\n}\n100% {\n		transform: translate(0, -1em) rotate(-225deg);\n}\n}\n";
n6(css6, {});
var _export_sfc6 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__4 = { name: "VueSpinnerClimbingBox" };
var _sfc_main6 = defineComponent({
  ...__default__4,
  props: useSpinnerProps({ size: 15 }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const containerStyle = computed(() => ({
      position: "relative",
      width: "7.1em",
      height: "7.1em"
    }));
    const wrapperStyle = computed(() => ({
      position: "absolute",
      top: "50%",
      left: "50%",
      marginTop: "-2.7em",
      marginLeft: "-2.7em",
      width: "5.4em",
      height: "5.4em",
      fontSize: size.value.string
    }));
    const boxStyle = computed(() => ({
      position: "absolute",
      left: "0",
      bottom: "-0.1em",
      height: "1em",
      width: "1em",
      backgroundColor: "transparent",
      borderRadius: "15%",
      border: `0.25em solid ${__props.color}`,
      transform: "translate(0, -1em) rotate(-45deg)",
      animationFillMode: "both",
      animation: "vue-spinner-climbing-box 2.5s infinite cubic-bezier(0.79, 0, 0.47, 0.97)"
    }));
    const hillStyle = computed(() => ({
      position: "absolute",
      width: "7.1em",
      height: "7.1em",
      top: "1.7em",
      left: "1.7em",
      borderLeft: `0.25em solid ${__props.color}`,
      transform: "rotate(45deg)"
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(containerStyle.value)
      }, [
        createBaseVNode("div", {
          style: normalizeStyle(wrapperStyle.value)
        }, [
          createBaseVNode("div", {
            style: normalizeStyle(boxStyle.value)
          }, null, 4),
          createBaseVNode("div", {
            style: normalizeStyle(hillStyle.value)
          }, null, 4)
        ], 4)
      ], 4);
    };
  }
});
var vueSpinnerClimbingBox = _export_sfc6(_sfc_main6, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-climbing-box.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-clip.vue.js
var e7 = [];
var t7 = [];
function n7(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e7.indexOf(i);
      -1 === u && (u = e7.push(i) - 1, t7[u] = {}), a = t7[u] && t7[u][s] ? t7[u][s] : t7[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css7 = "\n@keyframes vue-spinner-clip {\n0% {\n		transform: rotate(0deg) scale(1);\n}\n50% {\n		transform: rotate(180deg) scale(0.8);\n}\n100% {\n		transform: rotate(360deg) scale(1);\n}\n}\n";
n7(css7, {});
var _export_sfc7 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__5 = { name: "VueSpinnerClip" };
var _sfc_main7 = defineComponent({
  ...__default__5,
  props: useSpinnerProps({ size: 35 }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const ringStyle = computed(() => ({
      background: "transparent !important",
      width: size.value.string,
      height: size.value.string,
      borderRadius: "100%",
      border: `2px solid ${__props.color}`,
      borderBottomColor: "transparent",
      display: "inline-block",
      animation: "vue-spinner-clip 0.75s 0s infinite linear",
      animationFillMode: "both"
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(ringStyle.value)
      }, null, 4);
    };
  }
});
var vueSpinnerClip = _export_sfc7(_sfc_main7, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-clip.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-clock.js
var svg5 = [
  h("circle", {
    cx: "50",
    cy: "50",
    r: "48",
    fill: "none",
    "stroke-width": "4",
    "stroke-miterlimit": "10",
    stroke: "currentColor"
  }),
  h("line", {
    "stroke-linecap": "round",
    "stroke-width": "4",
    "stroke-miterlimit": "10",
    stroke: "currentColor",
    x1: "50",
    y1: "50",
    x2: "85",
    y2: "50.5"
  }, [
    h("animateTransform", {
      attributeName: "transform",
      type: "rotate",
      from: "0 50 50",
      to: "360 50 50",
      dur: "2s",
      repeatCount: "indefinite"
    })
  ]),
  h("line", {
    "stroke-linecap": "round",
    "stroke-width": "4",
    "stroke-miterlimit": "10",
    stroke: "currentColor",
    x1: "50",
    y1: "50",
    x2: "49.5",
    y2: "74"
  }, [
    h("animateTransform", {
      attributeName: "transform",
      type: "rotate",
      from: "0 50 50",
      to: "360 50 50",
      dur: "15s",
      repeatCount: "indefinite"
    })
  ])
];
var vue_spinner_clock_default = defineComponent({
  name: "VueSpinnerClock",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg5);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-comment.js
var svg6 = [
  h("rect", {
    x: "0",
    y: "0",
    width: "100",
    height: "100",
    fill: "none"
  }),
  h("path", {
    d: "M78,19H22c-6.6,0-12,5.4-12,12v31c0,6.6,5.4,12,12,12h37.2c0.4,3,1.8,5.6,3.7,7.6c2.4,2.5,5.1,4.1,9.1,4 c-1.4-2.1-2-7.2-2-10.3c0-0.4,0-0.8,0-1.3h8c6.6,0,12-5.4,12-12V31C90,24.4,84.6,19,78,19z",
    fill: "currentColor"
  }),
  h("circle", {
    cx: "30",
    cy: "47",
    r: "5",
    fill: "#fff"
  }, [
    h("animate", {
      attributeName: "opacity",
      from: "0",
      to: "1",
      values: "0;1;1",
      keyTimes: "0;0.2;1",
      dur: "1s",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "50",
    cy: "47",
    r: "5",
    fill: "#fff"
  }, [
    h("animate", {
      attributeName: "opacity",
      from: "0",
      to: "1",
      values: "0;0;1;1",
      keyTimes: "0;0.2;0.4;1",
      dur: "1s",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "70",
    cy: "47",
    r: "5",
    fill: "#fff"
  }, [
    h("animate", {
      attributeName: "opacity",
      from: "0",
      to: "1",
      values: "0;0;1;1",
      keyTimes: "0;0.4;0.6;1",
      dur: "1s",
      repeatCount: "indefinite"
    })
  ])
];
var vue_spinner_comment_default = defineComponent({
  name: "VueSpinnerComment",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid"
    }, svg6);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-core.js
var svg7 = [
  h("rect", {
    x: "0",
    y: "0",
    width: "100",
    height: "100",
    fill: "none"
  }),
  h("g", {
    transform: "translate(25 25)"
  }, [
    h("rect", {
      x: "-20",
      y: "-20",
      width: "40",
      height: "40",
      fill: "currentColor",
      opacity: "0.9"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "scale",
        from: "1.5",
        to: "1",
        repeatCount: "indefinite",
        begin: "0s",
        dur: "1s",
        calcMode: "spline",
        keySplines: "0.2 0.8 0.2 0.8",
        keyTimes: "0;1"
      })
    ])
  ]),
  h("g", {
    transform: "translate(75 25)"
  }, [
    h("rect", {
      x: "-20",
      y: "-20",
      width: "40",
      height: "40",
      fill: "currentColor",
      opacity: "0.8"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "scale",
        from: "1.5",
        to: "1",
        repeatCount: "indefinite",
        begin: "0.1s",
        dur: "1s",
        calcMode: "spline",
        keySplines: "0.2 0.8 0.2 0.8",
        keyTimes: "0;1"
      })
    ])
  ]),
  h("g", {
    transform: "translate(25 75)"
  }, [
    h("rect", {
      x: "-20",
      y: "-20",
      width: "40",
      height: "40",
      fill: "currentColor",
      opacity: "0.7"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "scale",
        from: "1.5",
        to: "1",
        repeatCount: "indefinite",
        begin: "0.3s",
        dur: "1s",
        calcMode: "spline",
        keySplines: "0.2 0.8 0.2 0.8",
        keyTimes: "0;1"
      })
    ])
  ]),
  h("g", {
    transform: "translate(75 75)"
  }, [
    h("rect", {
      x: "-20",
      y: "-20",
      width: "40",
      height: "40",
      fill: "currentColor",
      opacity: "0.6"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "scale",
        from: "1.5",
        to: "1",
        repeatCount: "indefinite",
        begin: "0.2s",
        dur: "1s",
        calcMode: "spline",
        keySplines: "0.2 0.8 0.2 0.8",
        keyTimes: "0;1"
      })
    ])
  ])
];
var vue_spinner_core_default = defineComponent({
  name: "VueSpinnerCube",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid"
    }, svg7);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-dot.vue.js
var e8 = [];
var t8 = [];
function n8(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e8.indexOf(i);
      -1 === u && (u = e8.push(i) - 1, t8[u] = {}), a = t8[u] && t8[u][s] ? t8[u][s] : t8[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css8 = "\n@keyframes vue-spinner-rotate {\n100% {\n		transform: rotate(360deg);\n}\n}\n@keyframes vue-spinner-bounce {\n0%,\n	100% {\n		transform: scale(0);\n}\n50% {\n		transform: scale(1);\n}\n}\n";
n8(css8, {});
var _export_sfc8 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__6 = { name: "VueSpinnerDot" };
var _sfc_main8 = defineComponent({
  ...__default__6,
  props: useSpinnerProps({ size: 60 }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const getCircleStyle = (version) => ({
      position: "absolute",
      height: `${size.value.value / 2}${size.value.unit}`,
      width: `${size.value.value / 2}${size.value.unit}`,
      backgroundColor: __props.color,
      borderRadius: "100%",
      animationFillMode: "forwards",
      top: version % 2 ? "0" : "auto",
      bottom: version % 2 ? `auto` : `0`,
      animation: `vue-spinner-bounce 2s ${version === 2 ? `-1s` : `0s`} infinite linear`
    });
    const wrapperStyle = computed(() => ({
      position: "relative",
      width: size.value.string,
      height: size.value.string,
      animationFillMode: "forwards",
      animation: "vue-spinner-rotate 2s 0s infinite linear"
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(wrapperStyle.value)
      }, [
        (openBlock(), createElementBlock(Fragment, null, renderList(2, (n22) => {
          return createBaseVNode("div", {
            key: n22,
            style: normalizeStyle(getCircleStyle(n22))
          }, null, 4);
        }), 64))
      ], 4);
    };
  }
});
var vueSpinnerDot = _export_sfc8(_sfc_main8, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-dot.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-dots.js
var svg8 = [
  h("circle", {
    cx: "15",
    cy: "15",
    r: "15"
  }, [
    h("animate", {
      attributeName: "r",
      from: "15",
      to: "15",
      begin: "0s",
      dur: "0.8s",
      values: "15;9;15",
      calcMode: "linear",
      repeatCount: "indefinite"
    }),
    h("animate", {
      attributeName: "fill-opacity",
      from: "1",
      to: "1",
      begin: "0s",
      dur: "0.8s",
      values: "1;.5;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "60",
    cy: "15",
    r: "9",
    "fill-opacity": ".3"
  }, [
    h("animate", {
      attributeName: "r",
      from: "9",
      to: "9",
      begin: "0s",
      dur: "0.8s",
      values: "9;15;9",
      calcMode: "linear",
      repeatCount: "indefinite"
    }),
    h("animate", {
      attributeName: "fill-opacity",
      from: ".5",
      to: ".5",
      begin: "0s",
      dur: "0.8s",
      values: ".5;1;.5",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "105",
    cy: "15",
    r: "15"
  }, [
    h("animate", {
      attributeName: "r",
      from: "15",
      to: "15",
      begin: "0s",
      dur: "0.8s",
      values: "15;9;15",
      calcMode: "linear",
      repeatCount: "indefinite"
    }),
    h("animate", {
      attributeName: "fill-opacity",
      from: "1",
      to: "1",
      begin: "0s",
      dur: "0.8s",
      values: "1;.5;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ])
];
var vue_spinner_dots_default = defineComponent({
  name: "VueSpinnerDots",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      fill: "currentColor",
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 120 30",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg8);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-facebook.js
var svg9 = [
  h("g", {
    transform: "translate(20 50)"
  }, [
    h("rect", {
      x: "-10",
      y: "-30",
      width: "20",
      height: "60",
      fill: "currentColor",
      opacity: "0.6"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "scale",
        from: "2",
        to: "1",
        begin: "0s",
        repeatCount: "indefinite",
        dur: "1s",
        calcMode: "spline",
        keySplines: "0.1 0.9 0.4 1",
        keyTimes: "0;1",
        values: "2;1"
      })
    ])
  ]),
  h("g", {
    transform: "translate(50 50)"
  }, [
    h("rect", {
      x: "-10",
      y: "-30",
      width: "20",
      height: "60",
      fill: "currentColor",
      opacity: "0.8"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "scale",
        from: "2",
        to: "1",
        begin: "0.1s",
        repeatCount: "indefinite",
        dur: "1s",
        calcMode: "spline",
        keySplines: "0.1 0.9 0.4 1",
        keyTimes: "0;1",
        values: "2;1"
      })
    ])
  ]),
  h("g", {
    transform: "translate(80 50)"
  }, [
    h("rect", {
      x: "-10",
      y: "-30",
      width: "20",
      height: "60",
      fill: "currentColor",
      opacity: "0.9"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "scale",
        from: "2",
        to: "1",
        begin: "0.2s",
        repeatCount: "indefinite",
        dur: "1s",
        calcMode: "spline",
        keySplines: "0.1 0.9 0.4 1",
        keyTimes: "0;1",
        values: "2;1"
      })
    ])
  ])
];
var vue_spinner_facebook_default = defineComponent({
  name: "VueSpinnerFacebook",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 100 100",
      xmlns: "http://www.w3.org/2000/svg",
      preserveAspectRatio: "xMidYMid"
    }, svg9);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-fade.vue.js
var e9 = [];
var t9 = [];
function n9(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e9.indexOf(i);
      -1 === u && (u = e9.push(i) - 1, t9[u] = {}), a = t9[u] && t9[u][s] ? t9[u][s] : t9[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css9 = "\n@keyframes vue-spinner-fade {\n50% {\n		opacity: 0.3;\n}\n100% {\n		opacity: 1;\n}\n}\n";
n9(css9, {});
var _export_sfc9 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__7 = { name: "VueSpinnerFade" };
var _sfc_main9 = defineComponent({
  ...__default__7,
  props: useSpinnerProps({
    color: "#000000",
    height: "15px",
    width: "5px",
    margin: "2px",
    radius: "2px"
  }),
  setup(__props) {
    const height = useSize(() => __props.height);
    const width = useSize(() => __props.width);
    const margin = useSize(() => __props.margin);
    const radius = useSize(() => __props.radius);
    const rad = 20;
    const quarter = rad / 2 + rad / 5.5;
    const wrapperStyle = {
      top: `${rad}px`,
      left: `${rad}px`,
      width: `${rad * 3}px`,
      height: `${rad * 3}px`,
      position: "relative",
      fontSize: 0
    };
    const styles = {
      a: {
        top: `${rad}px`,
        left: 0
      },
      b: {
        top: `${quarter}px`,
        left: `${quarter}px`,
        transform: "rotate(-45deg)"
      },
      c: {
        top: 0,
        left: `${rad}px`,
        transform: "rotate(90deg)"
      },
      d: {
        top: `${-quarter}px`,
        left: `${quarter}px`,
        transform: "rotate(45deg)"
      },
      e: {
        top: `${-rad}px`,
        left: 0
      },
      f: {
        top: `${-quarter}px`,
        left: `${-quarter}px`,
        transform: "rotate(-45deg)"
      },
      g: {
        top: 0,
        left: `${-rad}px`,
        transform: "rotate(90deg)"
      },
      h: {
        top: `${quarter}px`,
        left: `${-quarter}px`,
        transform: "rotate(45deg)"
      }
    };
    const getBarStyle = (variation, version) => ({
      position: "absolute",
      width: width.value.string,
      height: height.value.string,
      margin: margin.value.string,
      backgroundColor: __props.color,
      borderRadius: radius.value.string,
      transition: "2s",
      animationFillMode: "both",
      animation: `vue-spinner-fade 1.2s ${version * 0.12}s infinite ease-in-out`,
      ...styles[variation]
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", { style: wrapperStyle }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(Object.keys(styles), (letter, i) => {
          return openBlock(), createElementBlock("div", {
            key: i,
            style: normalizeStyle(getBarStyle(letter, i))
          }, null, 4);
        }), 128))
      ]);
    };
  }
});
var vueSpinnerFade = _export_sfc9(_sfc_main9, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-fade.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-gears.js
var svg10 = [
  h("g", {
    transform: "translate(-20,-20)"
  }, [
    h("path", {
      d: "M79.9,52.6C80,51.8,80,50.9,80,50s0-1.8-0.1-2.6l-5.1-0.4c-0.3-2.4-0.9-4.6-1.8-6.7l4.2-2.9c-0.7-1.6-1.6-3.1-2.6-4.5 L70,35c-1.4-1.9-3.1-3.5-4.9-4.9l2.2-4.6c-1.4-1-2.9-1.9-4.5-2.6L59.8,27c-2.1-0.9-4.4-1.5-6.7-1.8l-0.4-5.1C51.8,20,50.9,20,50,20 s-1.8,0-2.6,0.1l-0.4,5.1c-2.4,0.3-4.6,0.9-6.7,1.8l-2.9-4.1c-1.6,0.7-3.1,1.6-4.5,2.6l2.1,4.6c-1.9,1.4-3.5,3.1-5,4.9l-4.5-2.1 c-1,1.4-1.9,2.9-2.6,4.5l4.1,2.9c-0.9,2.1-1.5,4.4-1.8,6.8l-5,0.4C20,48.2,20,49.1,20,50s0,1.8,0.1,2.6l5,0.4 c0.3,2.4,0.9,4.7,1.8,6.8l-4.1,2.9c0.7,1.6,1.6,3.1,2.6,4.5l4.5-2.1c1.4,1.9,3.1,3.5,5,4.9l-2.1,4.6c1.4,1,2.9,1.9,4.5,2.6l2.9-4.1 c2.1,0.9,4.4,1.5,6.7,1.8l0.4,5.1C48.2,80,49.1,80,50,80s1.8,0,2.6-0.1l0.4-5.1c2.3-0.3,4.6-0.9,6.7-1.8l2.9,4.2 c1.6-0.7,3.1-1.6,4.5-2.6L65,69.9c1.9-1.4,3.5-3,4.9-4.9l4.6,2.2c1-1.4,1.9-2.9,2.6-4.5L73,59.8c0.9-2.1,1.5-4.4,1.8-6.7L79.9,52.6 z M50,65c-8.3,0-15-6.7-15-15c0-8.3,6.7-15,15-15s15,6.7,15,15C65,58.3,58.3,65,50,65z",
      fill: "currentColor"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "rotate",
        from: "90 50 50",
        to: "0 50 50",
        dur: "1s",
        repeatCount: "indefinite"
      })
    ])
  ]),
  h("g", {
    transform: "translate(20,20) rotate(15 50 50)"
  }, [
    h("path", {
      d: "M79.9,52.6C80,51.8,80,50.9,80,50s0-1.8-0.1-2.6l-5.1-0.4c-0.3-2.4-0.9-4.6-1.8-6.7l4.2-2.9c-0.7-1.6-1.6-3.1-2.6-4.5 L70,35c-1.4-1.9-3.1-3.5-4.9-4.9l2.2-4.6c-1.4-1-2.9-1.9-4.5-2.6L59.8,27c-2.1-0.9-4.4-1.5-6.7-1.8l-0.4-5.1C51.8,20,50.9,20,50,20 s-1.8,0-2.6,0.1l-0.4,5.1c-2.4,0.3-4.6,0.9-6.7,1.8l-2.9-4.1c-1.6,0.7-3.1,1.6-4.5,2.6l2.1,4.6c-1.9,1.4-3.5,3.1-5,4.9l-4.5-2.1 c-1,1.4-1.9,2.9-2.6,4.5l4.1,2.9c-0.9,2.1-1.5,4.4-1.8,6.8l-5,0.4C20,48.2,20,49.1,20,50s0,1.8,0.1,2.6l5,0.4 c0.3,2.4,0.9,4.7,1.8,6.8l-4.1,2.9c0.7,1.6,1.6,3.1,2.6,4.5l4.5-2.1c1.4,1.9,3.1,3.5,5,4.9l-2.1,4.6c1.4,1,2.9,1.9,4.5,2.6l2.9-4.1 c2.1,0.9,4.4,1.5,6.7,1.8l0.4,5.1C48.2,80,49.1,80,50,80s1.8,0,2.6-0.1l0.4-5.1c2.3-0.3,4.6-0.9,6.7-1.8l2.9,4.2 c1.6-0.7,3.1-1.6,4.5-2.6L65,69.9c1.9-1.4,3.5-3,4.9-4.9l4.6,2.2c1-1.4,1.9-2.9,2.6-4.5L73,59.8c0.9-2.1,1.5-4.4,1.8-6.7L79.9,52.6 z M50,65c-8.3,0-15-6.7-15-15c0-8.3,6.7-15,15-15s15,6.7,15,15C65,58.3,58.3,65,50,65z",
      fill: "currentColor"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "rotate",
        from: "0 50 50",
        to: "90 50 50",
        dur: "1s",
        repeatCount: "indefinite"
      })
    ])
  ])
];
var vue_spinner_gears_default = defineComponent({
  name: "VueSpinnerGears",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg10);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-grid.js
var svg11 = [
  h("circle", {
    cx: "12.5",
    cy: "12.5",
    r: "12.5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "0s",
      dur: "1s",
      values: "1;.2;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "12.5",
    cy: "52.5",
    r: "12.5",
    "fill-opacity": ".5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "100ms",
      dur: "1s",
      values: "1;.2;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "52.5",
    cy: "12.5",
    r: "12.5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "300ms",
      dur: "1s",
      values: "1;.2;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "52.5",
    cy: "52.5",
    r: "12.5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "600ms",
      dur: "1s",
      values: "1;.2;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "92.5",
    cy: "12.5",
    r: "12.5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "800ms",
      dur: "1s",
      values: "1;.2;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "92.5",
    cy: "52.5",
    r: "12.5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "400ms",
      dur: "1s",
      values: "1;.2;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "12.5",
    cy: "92.5",
    r: "12.5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "700ms",
      dur: "1s",
      values: "1;.2;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "52.5",
    cy: "92.5",
    r: "12.5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "500ms",
      dur: "1s",
      values: "1;.2;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("circle", {
    cx: "92.5",
    cy: "92.5",
    r: "12.5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "200ms",
      dur: "1s",
      values: "1;.2;1",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ])
];
var vue_spinner_grid_default = defineComponent({
  name: "VueSpinnerGrid",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      fill: "currentColor",
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 105 105",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg11);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-grid-pop.vue.js
var e10 = [];
var t10 = [];
function n10(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e10.indexOf(i);
      -1 === u && (u = e10.push(i) - 1, t10[u] = {}), a = t10[u] && t10[u][s] ? t10[u][s] : t10[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css10 = "\n@keyframes vue-spinner-grid {\n0% {\n		transform: scale(1);\n}\n50% {\n		transform: scale(0.5);\n		opacity: 0.7;\n}\n100% {\n		transform: scale(1);\n		opacity: 1;\n}\n}\n";
n10(css10, {});
var _export_sfc10 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__8 = { name: "VueSpinnerGridPop" };
var _sfc_main10 = defineComponent({
  ...__default__8,
  props: useSpinnerProps({ size: 15, margin: "2px" }),
  setup(__props) {
    const random = (top) => Math.random() * top;
    const size = useSize(() => __props.size);
    const margin = useSize(() => __props.margin);
    const wrapperWidth = computed(() => size.value.value * 3 + margin.value.value * 6);
    const getCircleStyle = (rand) => ({
      display: "inline-block",
      backgroundColor: __props.color,
      width: size.value.string,
      height: size.value.string,
      margin: margin.value.string,
      borderRadius: "100%",
      animationFillMode: "both",
      animation: `vue-spinner-grid ${rand / 100 + 0.6}s ${rand / 100 - 0.2}s infinite ease`
    });
    const wrapperStyle = computed(() => ({
      width: `${wrapperWidth.value}px`,
      fontSize: 0
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(wrapperStyle.value)
      }, [
        (openBlock(), createElementBlock(Fragment, null, renderList(9, (n22) => {
          return createBaseVNode("div", {
            key: n22,
            style: normalizeStyle(getCircleStyle(random(100)))
          }, null, 4);
        }), 64))
      ], 4);
    };
  }
});
var vueSpinnerGridPop = _export_sfc10(_sfc_main10, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-grid-pop.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-hearts.js
var svg12 = [
  h("path", {
    d: "M30.262 57.02L7.195 40.723c-5.84-3.976-7.56-12.06-3.842-18.063 3.715-6 11.467-7.65 17.306-3.68l4.52 3.76 2.6-5.274c3.716-6.002 11.47-7.65 17.304-3.68 5.84 3.97 7.56 12.054 3.842 18.062L34.49 56.118c-.897 1.512-2.793 1.915-4.228.9z",
    "fill-opacity": ".5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "0s",
      dur: "1.4s",
      values: "0.5;1;0.5",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("path", {
    d: "M105.512 56.12l-14.44-24.272c-3.716-6.008-1.996-14.093 3.843-18.062 5.835-3.97 13.588-2.322 17.306 3.68l2.6 5.274 4.52-3.76c5.84-3.97 13.593-2.32 17.308 3.68 3.718 6.003 1.998 14.088-3.842 18.064L109.74 57.02c-1.434 1.014-3.33.61-4.228-.9z",
    "fill-opacity": ".5"
  }, [
    h("animate", {
      attributeName: "fill-opacity",
      begin: "0.7s",
      dur: "1.4s",
      values: "0.5;1;0.5",
      calcMode: "linear",
      repeatCount: "indefinite"
    })
  ]),
  h("path", {
    d: "M67.408 57.834l-23.01-24.98c-5.864-6.15-5.864-16.108 0-22.248 5.86-6.14 15.37-6.14 21.234 0L70 16.168l4.368-5.562c5.863-6.14 15.375-6.14 21.235 0 5.863 6.14 5.863 16.098 0 22.247l-23.007 24.98c-1.43 1.556-3.757 1.556-5.188 0z"
  })
];
var vue_spinner_hearts_default = defineComponent({
  name: "VueSpinnerHearts",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      fill: "currentColor",
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 140 64",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg12);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-hourglass.js
var svg13 = [
  h("g", [
    h("path", {
      fill: "none",
      stroke: "currentColor",
      "stroke-width": "5",
      "stroke-miterlimit": "10",
      d: "M58.4,51.7c-0.9-0.9-1.4-2-1.4-2.3s0.5-0.4,1.4-1.4 C70.8,43.8,79.8,30.5,80,15.5H70H30H20c0.2,15,9.2,28.1,21.6,32.3c0.9,0.9,1.4,1.2,1.4,1.5s-0.5,1.6-1.4,2.5 C29.2,56.1,20.2,69.5,20,85.5h10h40h10C79.8,69.5,70.8,55.9,58.4,51.7z"
    }),
    h("clipPath", {
      id: "uil-hourglass-clip1"
    }, [
      h("rect", {
        x: "15",
        y: "20",
        width: "70",
        height: "25"
      }, [
        h("animate", {
          attributeName: "height",
          from: "25",
          to: "0",
          dur: "1s",
          repeatCount: "indefinite",
          values: "25;0;0",
          keyTimes: "0;0.5;1"
        }),
        h("animate", {
          attributeName: "y",
          from: "20",
          to: "45",
          dur: "1s",
          repeatCount: "indefinite",
          values: "20;45;45",
          keyTimes: "0;0.5;1"
        })
      ])
    ]),
    h("clipPath", {
      id: "uil-hourglass-clip2"
    }, [
      h("rect", {
        x: "15",
        y: "55",
        width: "70",
        height: "25"
      }, [
        h("animate", {
          attributeName: "height",
          from: "0",
          to: "25",
          dur: "1s",
          repeatCount: "indefinite",
          values: "0;25;25",
          keyTimes: "0;0.5;1"
        }),
        h("animate", {
          attributeName: "y",
          from: "80",
          to: "55",
          dur: "1s",
          repeatCount: "indefinite",
          values: "80;55;55",
          keyTimes: "0;0.5;1"
        })
      ])
    ]),
    h("path", {
      d: "M29,23c3.1,11.4,11.3,19.5,21,19.5S67.9,34.4,71,23H29z",
      "clip-path": "url(#uil-hourglass-clip1)",
      fill: "currentColor"
    }),
    h("path", {
      d: "M71.6,78c-3-11.6-11.5-20-21.5-20s-18.5,8.4-21.5,20H71.6z",
      "clip-path": "url(#uil-hourglass-clip2)",
      fill: "currentColor"
    }),
    h("animateTransform", {
      attributeName: "transform",
      type: "rotate",
      from: "0 50 50",
      to: "180 50 50",
      repeatCount: "indefinite",
      dur: "1s",
      values: "0 50 50;0 50 50;180 50 50",
      keyTimes: "0;0.7;1"
    })
  ])
];
var vue_spinner_hourglass_default = defineComponent({
  name: "VueSpinnerHourglass",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg13);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-infinity.js
var svg14 = [
  h("path", {
    d: "M24.3,30C11.4,30,5,43.3,5,50s6.4,20,19.3,20c19.3,0,32.1-40,51.4-40C88.6,30,95,43.3,95,50s-6.4,20-19.3,20C56.4,70,43.6,30,24.3,30z",
    fill: "none",
    stroke: "currentColor",
    "stroke-width": "8",
    "stroke-dasharray": "10.691205342610678 10.691205342610678",
    "stroke-dashoffset": "0"
  }, [
    h("animate", {
      attributeName: "stroke-dashoffset",
      from: "0",
      to: "21.382410685221355",
      begin: "0",
      dur: "2s",
      repeatCount: "indefinite",
      fill: "freeze"
    })
  ])
];
var vue_spinner_infinity_default = defineComponent({
  name: "VueSpinnerInfinity",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid"
    }, svg14);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-ios.js
var svg15 = [
  h("g", {
    "stroke-width": "4",
    "stroke-linecap": "round"
  }, [
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(180)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: "1;.85;.7;.65;.55;.45;.35;.25;.15;.1;0;1",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(210)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: "0;1;.85;.7;.65;.55;.45;.35;.25;.15;.1;0",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(240)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: ".1;0;1;.85;.7;.65;.55;.45;.35;.25;.15;.1",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(270)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: ".15;.1;0;1;.85;.7;.65;.55;.45;.35;.25;.15",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(300)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: ".25;.15;.1;0;1;.85;.7;.65;.55;.45;.35;.25",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(330)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: ".35;.25;.15;.1;0;1;.85;.7;.65;.55;.45;.35",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(0)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: ".45;.35;.25;.15;.1;0;1;.85;.7;.65;.55;.45",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(30)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: ".55;.45;.35;.25;.15;.1;0;1;.85;.7;.65;.55",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(60)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: ".65;.55;.45;.35;.25;.15;.1;0;1;.85;.7;.65",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(90)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: ".7;.65;.55;.45;.35;.25;.15;.1;0;1;.85;.7",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(120)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: ".85;.7;.65;.55;.45;.35;.25;.15;.1;0;1;.85",
        repeatCount: "indefinite"
      })
    ]),
    h("line", {
      y1: "17",
      y2: "29",
      transform: "translate(32,32) rotate(150)"
    }, [
      h("animate", {
        attributeName: "stroke-opacity",
        dur: "750ms",
        values: "1;.85;.7;.65;.55;.45;.35;.25;.15;.1;0;1",
        repeatCount: "indefinite"
      })
    ])
  ])
];
var vue_spinner_ios_default = defineComponent({
  name: "VueSpinnerIos",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      stroke: "currentColor",
      fill: "currentColor",
      viewBox: "0 0 64 64"
    }, svg15);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-moon.vue.js
var e11 = [];
var t11 = [];
function n11(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e11.indexOf(i);
      -1 === u && (u = e11.push(i) - 1, t11[u] = {}), a = t11[u] && t11[u][s] ? t11[u][s] : t11[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css11 = "\n@keyframes vue-spinner-moon {\n100% {\n		transform: rotate(360deg);\n}\n}\n";
n11(css11, {});
var _export_sfc11 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__9 = { name: "VueSpinnerMoon" };
var _sfc_main11 = defineComponent({
  ...__default__9,
  props: useSpinnerProps({ size: 60 }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const moonSize = (size2) => size2 / 7;
    const wrapperStyle = computed(() => ({
      position: "relative",
      width: `${size.value.value + moonSize(size.value.value) * 2}${size.value.unit}`,
      height: `${size.value.value + moonSize(size.value.value) * 2}${size.value.unit}`,
      animation: "vue-spinner-moon 0.6s linear 0s infinite normal forwards running",
      boxSizing: "content-box"
    }));
    const moonStyle = computed(() => ({
      position: "absolute",
      top: `${size.value.value / 2 - moonSize(size.value.value)}${size.value.unit}`,
      backgroundColor: __props.color,
      opacity: "0.8",
      animation: "vue-spinner-moon 0.6s linear 0s infinite normal forwards running",
      boxSizing: "content-box",
      width: `${moonSize(size.value.value)}${size.value.unit}`,
      height: `${moonSize(size.value.value)}${size.value.unit}`,
      borderRadius: "100%"
    }));
    const ringStyle = computed(() => ({
      borderWidth: `${moonSize(size.value.value)}${size.value.unit}`,
      borderStyle: "solid",
      borderColor: __props.color,
      borderImage: "initial",
      opacity: "0.1",
      boxSizing: "content-box",
      width: size.value.string,
      height: size.value.string,
      borderRadius: "100%"
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(wrapperStyle.value)
      }, [
        createBaseVNode("div", {
          style: normalizeStyle(moonStyle.value)
        }, null, 4),
        createBaseVNode("div", {
          style: normalizeStyle(ringStyle.value)
        }, null, 4)
      ], 4);
    };
  }
});
var vueSpinnerMoon = _export_sfc11(_sfc_main11, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-moon.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-orbit.js
var svg16 = [
  h("circle", {
    cx: "50",
    cy: "50",
    r: "44",
    fill: "none",
    "stroke-width": "4",
    "stroke-opacity": ".5",
    stroke: "currentColor"
  }),
  h("circle", {
    cx: "8",
    cy: "54",
    r: "6",
    fill: "currentColor",
    "stroke-width": "3",
    stroke: "currentColor"
  }, [
    h("animateTransform", {
      attributeName: "transform",
      type: "rotate",
      from: "0 50 48",
      to: "360 50 52",
      dur: "2s",
      repeatCount: "indefinite"
    })
  ])
];
var vue_spinner_orbit_default = defineComponent({
  name: "VueSpinnerOrbit",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg16);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-oval.js
var svg17 = [
  h("g", {
    transform: "translate(1 1)",
    "stroke-width": "2",
    fill: "none",
    "fill-rule": "evenodd"
  }, [
    h("circle", {
      "stroke-opacity": ".5",
      cx: "18",
      cy: "18",
      r: "18"
    }),
    h("path", {
      d: "M36 18c0-9.94-8.06-18-18-18"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "rotate",
        from: "0 18 18",
        to: "360 18 18",
        dur: "1s",
        repeatCount: "indefinite"
      })
    ])
  ])
];
var vue_spinner_oval_default = defineComponent({
  name: "VueSpinnerOval",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      stroke: "currentColor",
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 38 38",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg17);
  }
});

// node_modules/.pnpm/just-range@4.2.0/node_modules/just-range/index.mjs
var arrayRange = range;
function range(start, stop, step) {
  if (start != null && typeof start != "number") {
    throw new Error("start must be a number or null");
  }
  if (stop != null && typeof stop != "number") {
    throw new Error("stop must be a number or null");
  }
  if (step != null && typeof step != "number") {
    throw new Error("step must be a number or null");
  }
  if (stop == null) {
    stop = start || 0;
    start = 0;
  }
  if (step == null) {
    step = stop > start ? 1 : -1;
  }
  var toReturn = [];
  var increasing = start < stop;
  for (; increasing ? start < stop : start > stop; start += step) {
    toReturn.push(start);
  }
  return toReturn;
}

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-pacman.vue.js
var e12 = [];
var t12 = [];
function n12(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e12.indexOf(i);
      -1 === u && (u = e12.push(i) - 1, t12[u] = {}), a = t12[u] && t12[u][s] ? t12[u][s] : t12[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css12 = "\n@keyframes vue-spinner-pacman0 {\n0% {\n		transform: rotate(0deg);\n}\n50% {\n		transform: rotate(-44deg);\n}\n}\n@keyframes vue-spinner-pacman1 {\n0% {\n		transform: rotate(0deg);\n}\n50% {\n		transform: rotate(44deg);\n}\n}\n@keyframes vue-spinner-pacman-ball-animation {\n75% {\n		opacity: 0.7;\n}\n100% {\n		transform: translate(\n			var(--6ccace4f-___-4___size_value___size_unit__),\n			var(--6ccace4f-___-size_value___4___size_unit__)\n		);\n}\n}\n";
n12(css12, {});
var _export_sfc12 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__10 = { name: "VueSpinnerPacman" };
var _sfc_main12 = defineComponent({
  ...__default__10,
  props: useSpinnerProps({ size: "25px", margin: "2px" }),
  setup(__props) {
    useCssVars((_ctx) => ({
      "6ccace4f-___-4___size_value___size_unit__": `${-4 * size.value.value}${size.value.unit}`,
      "6ccace4f-___-size_value___4___size_unit__": `${-size.value.value / 4}${size.value.unit}`
    }));
    const size = useSize(() => __props.size);
    const margin = useSize(() => __props.margin);
    const s1 = (sizeString) => `${sizeString} solid transparent`;
    const s2 = (sizeString, color) => `${sizeString} solid ${color}`;
    const getPacmanStyle = (version) => ({
      position: "absolute",
      width: 0,
      height: 0,
      borderTop: version === 0 ? s1(size.value.string) : s2(size.value.string, __props.color),
      borderLeft: s2(size.value.string, __props.color),
      borderBottom: version === 0 ? s2(size.value.string, __props.color) : s1(size.value.string),
      borderRight: s1(size.value.string),
      borderRadius: size.value.string,
      animation: `vue-spinner-pacman${version} ease-in-out 0.8s infinite normal both running`
    });
    const getBallStyle = (version) => ({
      position: "absolute",
      top: size.value.string,
      left: `${size.value.value * 4}${size.value.unit}`,
      width: `${size.value.value / 2.5}${size.value.unit}`,
      height: `${size.value.value / 2.5}${size.value.unit}`,
      margin: margin.value.string,
      borderRadius: "100%",
      backgroundColor: __props.color,
      transform: `translate(0, ${-size.value.value / 4}${size.value.unit})`,
      animation: `vue-spinner-pacman-ball-animation 1s linear ${version * 0.25}s infinite normal both running`
    });
    const wrapperStyle = computed(() => ({
      position: "relative",
      width: size.value.string,
      height: size.value.string,
      fontSize: 0
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(wrapperStyle.value)
      }, [
        createBaseVNode("div", {
          style: normalizeStyle(getPacmanStyle(0))
        }, null, 4),
        createBaseVNode("div", {
          style: normalizeStyle(getPacmanStyle(1))
        }, null, 4),
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(arrayRange)(2, 7), (n22) => {
          return openBlock(), createElementBlock("div", {
            key: n22,
            style: normalizeStyle(getBallStyle(n22))
          }, null, 4);
        }), 128))
      ], 4);
    };
  }
});
var vueSpinnerPacman = _export_sfc12(_sfc_main12, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-pacman.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-pie.js
var svg18 = [
  h("path", {
    d: "M0 50A50 50 0 0 1 50 0L50 50L0 50",
    fill: "currentColor",
    opacity: "0.5"
  }, [
    h("animateTransform", {
      attributeName: "transform",
      type: "rotate",
      from: "0 50 50",
      to: "360 50 50",
      dur: "0.8s",
      repeatCount: "indefinite"
    })
  ]),
  h("path", {
    d: "M50 0A50 50 0 0 1 100 50L50 50L50 0",
    fill: "currentColor",
    opacity: "0.5"
  }, [
    h("animateTransform", {
      attributeName: "transform",
      type: "rotate",
      from: "0 50 50",
      to: "360 50 50",
      dur: "1.6s",
      repeatCount: "indefinite"
    })
  ]),
  h("path", {
    d: "M100 50A50 50 0 0 1 50 100L50 50L100 50",
    fill: "currentColor",
    opacity: "0.5"
  }, [
    h("animateTransform", {
      attributeName: "transform",
      type: "rotate",
      from: "0 50 50",
      to: "360 50 50",
      dur: "2.4s",
      repeatCount: "indefinite"
    })
  ]),
  h("path", {
    d: "M50 100A50 50 0 0 1 0 50L50 50L50 100",
    fill: "currentColor",
    opacity: "0.5"
  }, [
    h("animateTransform", {
      attributeName: "transform",
      type: "rotate",
      from: "0 50 50",
      to: "360 50 50",
      dur: "3.2s",
      repeatCount: "indefinite"
    })
  ])
];
var vue_spinner_pie_default = defineComponent({
  name: "VueSpinnerPie",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg18);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-propagate.vue.js
var e13 = [];
var t13 = [];
function n13(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e13.indexOf(i);
      -1 === u && (u = e13.push(i) - 1, t13[u] = {}), a = t13[u] && t13[u][s] ? t13[u][s] : t13[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css13 = "\n@keyframes vue-spinner-propagate0 {\n25% {\n		transform: translateX(var(--4d723eb2-getDistance_0___left__)) scale(0.75);\n}\n50% {\n		transform: translateX(var(--4d723eb2-getDistance_1___left__)) scale(0.6);\n}\n75% {\n		transform: translateX(var(--4d723eb2-getDistance_2___left__)) scale(0.5);\n}\n95% {\n		transform: translateX(0rem) scale(1);\n}\n}\n@keyframes vue-spinner-propagate1 {\n25% {\n		transform: translateX(var(--4d723eb2-getDistance_0___left__)) scale(0.75);\n}\n50% {\n		transform: translateX(var(--4d723eb2-getDistance_1___left__)) scale(0.6);\n}\n75% {\n		transform: translateX(var(--4d723eb2-getDistance_1___left__)) scale(0.6);\n}\n95% {\n		transform: translateX(0rem) scale(1);\n}\n}\n@keyframes vue-spinner-propagate2 {\n25% {\n		transform: translateX(var(--4d723eb2-getDistance_0___left__)) scale(0.75);\n}\n75% {\n		transform: translateX(var(--4d723eb2-getDistance_0___left__)) scale(0.75);\n}\n95% {\n		transform: translateX(0rem) scale(1);\n}\n}\n@keyframes vue-spinner-propagate3 {\n25% {\n		transform: translateX(var(--4d723eb2-getDistance_0___right__)) scale(0.75);\n}\n75% {\n		transform: translateX(var(--4d723eb2-getDistance_0___right__)) scale(0.75);\n}\n95% {\n		transform: translateX(0rem) scale(1);\n}\n}\n@keyframes vue-spinner-propagate4 {\n25% {\n		transform: translateX(var(--4d723eb2-getDistance_0___right__)) scale(0.75);\n}\n50% {\n		transform: translateX(var(--4d723eb2-getDistance_1___right__)) scale(0.6);\n}\n75% {\n		transform: translateX(var(--4d723eb2-getDistance_1___right__)) scale(0.6);\n}\n95% {\n		transform: translateX(0rem) scale(1);\n}\n}\n@keyframes vue-spinner-propagate5 {\n25% {\n		transform: translateX(var(--4d723eb2-getDistance_0___right__)) scale(0.75);\n}\n50% {\n		transform: translateX(var(--4d723eb2-getDistance_1___right__)) scale(0.6);\n}\n75% {\n		transform: translateX(var(--4d723eb2-getDistance_2___right__)) scale(0.5);\n}\n95% {\n		transform: translateX(0rem) scale(1);\n}\n}\n";
n13(css13, {});
var _export_sfc13 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__11 = { name: "VueSpinnerPropagate" };
var _sfc_main13 = defineComponent({
  ...__default__11,
  props: useSpinnerProps({
    size: "15px"
  }),
  setup(__props) {
    useCssVars((_ctx) => ({
      "4d723eb2-getDistance_0___left__": getDistance(0, "left"),
      "4d723eb2-getDistance_1___left__": getDistance(1, "left"),
      "4d723eb2-getDistance_2___left__": getDistance(2, "left"),
      "4d723eb2-getDistance_0___right__": getDistance(0, "right"),
      "4d723eb2-getDistance_1___right__": getDistance(1, "right"),
      "4d723eb2-getDistance_2___right__": getDistance(2, "right")
    }));
    const size = useSize(() => __props.size);
    const distance = [1, 3, 5];
    const getCircleStyle = (version) => ({
      position: "absolute",
      width: size.value.string,
      height: size.value.string,
      borderRadius: "50%",
      background: __props.color,
      fontSize: `${size.value.value / 3}${size.value.unit}`,
      animationFillMode: "forwards",
      animation: `vue-spinner-propagate${version} 1.5s infinite`
    });
    const getDistance = (index, direction) => `${distance[index] * (direction === "left" ? -1 : 1)}rem`;
    const wrapperStyle = computed(() => ({
      position: "relative"
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(wrapperStyle.value)
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(arrayRange)(0, 6), (n22) => {
          return openBlock(), createElementBlock("div", {
            key: n22,
            style: normalizeStyle(getCircleStyle(n22))
          }, null, 4);
        }), 128))
      ], 4);
    };
  }
});
var vueSpinnerPropagate = _export_sfc13(_sfc_main13, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-propagate.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-puff.js
var svg19 = [
  h("g", {
    fill: "none",
    "fill-rule": "evenodd",
    "stroke-width": "2"
  }, [
    h("circle", {
      cx: "22",
      cy: "22",
      r: "1"
    }, [
      h("animate", {
        attributeName: "r",
        begin: "0s",
        dur: "1.8s",
        values: "1; 20",
        calcMode: "spline",
        keyTimes: "0; 1",
        keySplines: "0.165, 0.84, 0.44, 1",
        repeatCount: "indefinite"
      }),
      h("animate", {
        attributeName: "stroke-opacity",
        begin: "0s",
        dur: "1.8s",
        values: "1; 0",
        calcMode: "spline",
        keyTimes: "0; 1",
        keySplines: "0.3, 0.61, 0.355, 1",
        repeatCount: "indefinite"
      })
    ]),
    h("circle", {
      cx: "22",
      cy: "22",
      r: "1"
    }, [
      h("animate", {
        attributeName: "r",
        begin: "-0.9s",
        dur: "1.8s",
        values: "1; 20",
        calcMode: "spline",
        keyTimes: "0; 1",
        keySplines: "0.165, 0.84, 0.44, 1",
        repeatCount: "indefinite"
      }),
      h("animate", {
        attributeName: "stroke-opacity",
        begin: "-0.9s",
        dur: "1.8s",
        values: "1; 0",
        calcMode: "spline",
        keyTimes: "0; 1",
        keySplines: "0.3, 0.61, 0.355, 1",
        repeatCount: "indefinite"
      })
    ])
  ])
];
var vue_spinner_puff_default = defineComponent({
  name: "VueSpinnerPuff",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      stroke: "currentColor",
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 44 44",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg19);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-pulse.vue.js
var e14 = [];
var t14 = [];
function n14(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e14.indexOf(i);
      -1 === u && (u = e14.push(i) - 1, t14[u] = {}), a = t14[u] && t14[u][s] ? t14[u][s] : t14[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css14 = "\n@keyframes vue-spinner-pulse {\n0% {\n		transform: scale(1);\n		opacity: 1;\n}\n45% {\n		transform: scale(0.1);\n		opacity: 0.7;\n}\n80% {\n		transform: scale(1);\n		opacity: 1;\n}\n}\n";
n14(css14, {});
var _export_sfc14 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__12 = { name: "VueSpinnerPulse" };
var _sfc_main14 = defineComponent({
  ...__default__12,
  props: useSpinnerProps({ size: "15px", margin: "2px" }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const margin = useSize(() => __props.margin);
    const getCircleStyle = (version) => ({
      display: "inline-block",
      width: size.value.string,
      height: size.value.string,
      margin: margin.value.string,
      borderRadius: "100%",
      backgroundColor: __props.color,
      animationFillMode: "both",
      animation: `vue-spinner-pulse 0.75s ${version * 0.12}s infinite cubic-bezier(0.2, 0.68, 0.18, 1.08)`
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        (openBlock(), createElementBlock(Fragment, null, renderList(3, (n22) => {
          return createBaseVNode("div", {
            key: n22,
            class: "circle",
            style: normalizeStyle(getCircleStyle(n22 + 1))
          }, null, 4);
        }), 64))
      ]);
    };
  }
});
var vueSpinnerPulse = _export_sfc14(_sfc_main14, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-pulse.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-radio.js
var svg20 = [
  h("g", {
    transform: "scale(0.55)"
  }, [
    h("circle", {
      cx: "30",
      cy: "150",
      r: "30",
      fill: "currentColor"
    }, [
      h("animate", {
        attributeName: "opacity",
        from: "0",
        to: "1",
        dur: "1s",
        begin: "0",
        repeatCount: "indefinite",
        keyTimes: "0;0.5;1",
        values: "0;1;1"
      })
    ]),
    h("path", {
      d: "M90,150h30c0-49.7-40.3-90-90-90v30C63.1,90,90,116.9,90,150z",
      fill: "currentColor"
    }, [
      h("animate", {
        attributeName: "opacity",
        from: "0",
        to: "1",
        dur: "1s",
        begin: "0.1",
        repeatCount: "indefinite",
        keyTimes: "0;0.5;1",
        values: "0;1;1"
      })
    ]),
    h("path", {
      d: "M150,150h30C180,67.2,112.8,0,30,0v30C96.3,30,150,83.7,150,150z",
      fill: "currentColor"
    }, [
      h("animate", {
        attributeName: "opacity",
        from: "0",
        to: "1",
        dur: "1s",
        begin: "0.2",
        repeatCount: "indefinite",
        keyTimes: "0;0.5;1",
        values: "0;1;1"
      })
    ])
  ])
];
var vue_spinner_radio_default = defineComponent({
  name: "VueSpinnerRadio",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg20);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-ring.vue.js
var e15 = [];
var t15 = [];
function n15(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e15.indexOf(i);
      -1 === u && (u = e15.push(i) - 1, t15[u] = {}), a = t15[u] && t15[u][s] ? t15[u][s] : t15[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css15 = "\n@keyframes vue-spinner-right {\n0% {\n		transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n}\n100% {\n		transform: rotateX(180deg) rotateY(360deg) rotateZ(360deg);\n}\n}\n@keyframes vue-spinner-left {\n0% {\n		transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n}\n100% {\n		transform: rotateX(360deg) rotateY(180deg) rotateZ(360deg);\n}\n}\n";
n15(css15, {});
var _export_sfc15 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__13 = { name: "VueSpinnerRing" };
var _sfc_main15 = defineComponent({
  ...__default__13,
  props: useSpinnerProps({ size: "60px" }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const getRingStyle = (version) => ({
      position: "absolute",
      top: "0",
      left: "0",
      width: size.value.string,
      height: size.value.string,
      border: `${size.value.value / 10}${size.value.unit} solid ${__props.color}`,
      borderRadius: "100%",
      opacity: "0.4",
      animationFillMode: "forwards",
      perspective: "800px",
      animation: `${version === 1 ? "vue-spinner-right" : "vue-spinner-left"} 2s 0s infinite linear`
    });
    const wrapperStyle = computed(() => ({
      position: "relative",
      width: size.value.string,
      height: size.value.string
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(wrapperStyle.value)
      }, [
        (openBlock(), createElementBlock(Fragment, null, renderList(2, (n22) => {
          return createBaseVNode("div", {
            key: n22,
            style: normalizeStyle(getRingStyle(n22))
          }, null, 4);
        }), 64))
      ], 4);
    };
  }
});
var vueSpinnerRing = _export_sfc15(_sfc_main15, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-ring.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-rings.js
var svg21 = [
  h("g", {
    fill: "none",
    "fill-rule": "evenodd",
    transform: "translate(1 1)",
    "stroke-width": "2"
  }, [
    h("circle", {
      cx: "22",
      cy: "22",
      r: "6"
    }, [
      h("animate", {
        attributeName: "r",
        begin: "1.5s",
        dur: "3s",
        values: "6;22",
        calcMode: "linear",
        repeatCount: "indefinite"
      }),
      h("animate", {
        attributeName: "stroke-opacity",
        begin: "1.5s",
        dur: "3s",
        values: "1;0",
        calcMode: "linear",
        repeatCount: "indefinite"
      }),
      h("animate", {
        attributeName: "stroke-width",
        begin: "1.5s",
        dur: "3s",
        values: "2;0",
        calcMode: "linear",
        repeatCount: "indefinite"
      })
    ]),
    h("circle", {
      cx: "22",
      cy: "22",
      r: "6"
    }, [
      h("animate", {
        attributeName: "r",
        begin: "3s",
        dur: "3s",
        values: "6;22",
        calcMode: "linear",
        repeatCount: "indefinite"
      }),
      h("animate", {
        attributeName: "stroke-opacity",
        begin: "3s",
        dur: "3s",
        values: "1;0",
        calcMode: "linear",
        repeatCount: "indefinite"
      }),
      h("animate", {
        attributeName: "stroke-width",
        begin: "3s",
        dur: "3s",
        values: "2;0",
        calcMode: "linear",
        repeatCount: "indefinite"
      })
    ]),
    h("circle", {
      cx: "22",
      cy: "22",
      r: "8"
    }, [
      h("animate", {
        attributeName: "r",
        begin: "0s",
        dur: "1.5s",
        values: "6;1;2;3;4;5;6",
        calcMode: "linear",
        repeatCount: "indefinite"
      })
    ])
  ])
];
var vue_spinner_rings_default = defineComponent({
  name: "VueSpinnerRings",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      stroke: "currentColor",
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 45 45",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg21);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-rise.vue.js
var e16 = [];
var t16 = [];
function n16(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e16.indexOf(i);
      -1 === u && (u = e16.push(i) - 1, t16[u] = {}), a = t16[u] && t16[u][s] ? t16[u][s] : t16[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css16 = "\n@keyframes vue-spinner-even {\n0% {\n		transform: scale(1.1);\n}\n25% {\n		transform: translateY(var(--515f9cd0--riseAmount____px_));\n}\n50% {\n		transform: scale(0.4);\n}\n75% {\n		transform: translateY(var(--515f9cd0-riseAmount____px_));\n}\n100% {\n		transform: translateY(0) scale(1);\n}\n}\n@keyframes vue-spinner-odd {\n0% {\n		transform: scale(0.4);\n}\n25% {\n		transform: translateY(var(--515f9cd0-riseAmount____px_));\n}\n50% {\n		transform: scale(1.1);\n}\n75% {\n		transform: translateY(var(--515f9cd0--riseAmount____px_));\n}\n100% {\n		transform: translateY(0) scale(0.75);\n}\n}\n";
n16(css16, {});
var _export_sfc16 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__14 = { name: "VueSpinnerRise" };
var _sfc_main16 = defineComponent({
  ...__default__14,
  props: useSpinnerProps({ size: "15px", margin: "2px" }),
  setup(__props) {
    useCssVars((_ctx) => ({
      "515f9cd0--riseAmount____px_": -riseAmount + "px",
      "515f9cd0-riseAmount____px_": riseAmount + "px"
    }));
    const size = useSize(() => __props.size);
    const margin = useSize(() => __props.margin);
    const riseAmount = 30;
    const getCircleStyle = (version) => ({
      display: "inline-block",
      width: size.value.string,
      height: size.value.string,
      margin: margin.value.string,
      borderRadius: "100%",
      backgroundColor: __props.color,
      animationFillMode: "both",
      animation: `${version % 2 === 0 ? "vue-spinner-even" : "vue-spinner-odd"} 1s 0s infinite cubic-bezier(0.15, 0.46, 0.9, 0.6)`
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(arrayRange)(1, 6), (n22) => {
          return openBlock(), createElementBlock("div", {
            key: n22,
            style: normalizeStyle(getCircleStyle(n22))
          }, null, 4);
        }), 128))
      ]);
    };
  }
});
var vueSpinnerRise = _export_sfc16(_sfc_main16, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-rise.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-rotate.vue.js
var e17 = [];
var t17 = [];
function n17(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e17.indexOf(i);
      -1 === u && (u = e17.push(i) - 1, t17[u] = {}), a = t17[u] && t17[u][s] ? t17[u][s] : t17[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css17 = "\n@keyframes vue-spinner-rotate-079b92bc {\n0% {\n		transform: rotate(0deg);\n}\n50% {\n		transform: rotate(180deg);\n}\n100% {\n		transform: rotate(360deg);\n}\n}\n";
n17(css17, {});
var _export_sfc17 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__15 = { name: "VueSpinnerRotate" };
var _sfc_main17 = defineComponent({
  ...__default__15,
  props: useSpinnerProps({ size: "15px", margin: "2px" }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const margin = useSize(() => __props.margin);
    const wrapperStyle = computed(() => ({
      position: "relative",
      display: "inline-block",
      animation: "vue-spinner-rotate 1s 0s infinite cubic-bezier(0.7, -0.13, 0.22, 0.86)",
      animationFillMode: "both",
      width: size.value.string,
      height: size.value.string,
      margin: margin.value.string,
      borderRadius: "100%",
      backgroundColor: __props.color
    }));
    const getCircleStyle = (side) => ({
      position: "absolute",
      top: "0",
      opacity: "0.8",
      width: size.value.string,
      height: size.value.string,
      margin: margin.value.string,
      borderRadius: "100%",
      backgroundColor: __props.color,
      left: `${side === 1 ? -28 : 25}px`
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(wrapperStyle.value)
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(arrayRange)(0, 2), (n22) => {
          return openBlock(), createElementBlock("div", {
            key: n22,
            style: normalizeStyle(getCircleStyle(n22))
          }, null, 4);
        }), 128))
      ], 4);
    };
  }
});
var vueSpinnerRotate = _export_sfc17(_sfc_main17, [["__scopeId", "data-v-079b92bc"], ["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-rotate.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-scale.vue.js
var e18 = [];
var t18 = [];
function n18(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e18.indexOf(i);
      -1 === u && (u = e18.push(i) - 1, t18[u] = {}), a = t18[u] && t18[u][s] ? t18[u][s] : t18[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css18 = "\n@keyframes vue-spinner-scale {\n0% {\n		transform: scaleY(1);\n}\n50% {\n		transform: scaleY(0.4);\n}\n100% {\n		transform: scaleY(1);\n}\n}\n";
n18(css18, {});
var _export_sfc18 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__16 = { name: "VueSpinnerScale" };
var _sfc_main18 = defineComponent({
  ...__default__16,
  props: useSpinnerProps({
    height: "35px",
    width: "4px",
    radius: "2px",
    margin: "2px"
  }),
  setup(__props) {
    const width = useSize(() => __props.width);
    const height = useSize(() => __props.height);
    const radius = useSize(() => __props.radius);
    const margin = useSize(() => __props.margin);
    const getBarStyle = (version) => ({
      display: "inline-block",
      width: width.value.string,
      height: height.value.string,
      margin: margin.value.string,
      borderRadius: radius.value.string,
      backgroundColor: __props.color,
      animation: `vue-spinner-scale 1s cubic-bezier(0.2, 0.68, 0.18, 1.08) ${version * 0.1}s infinite normal both running`
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        (openBlock(), createElementBlock(Fragment, null, renderList(5, (n22) => {
          return createBaseVNode("div", {
            key: n22,
            style: normalizeStyle(getBarStyle(n22 + 1))
          }, null, 4);
        }), 64))
      ]);
    };
  }
});
var vueSpinnerScale = _export_sfc18(_sfc_main18, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-scale.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-skew.vue.js
var e19 = [];
var t19 = [];
function n19(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e19.indexOf(i);
      -1 === u && (u = e19.push(i) - 1, t19[u] = {}), a = t19[u] && t19[u][s] ? t19[u][s] : t19[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css19 = "\n@keyframes vue-spinner-skew {\n25% {\n		transform: perspective(100px) rotateX(180deg) rotateY(0);\n}\n50% {\n		transform: perspective(100px) rotateX(180deg) rotateY(180deg);\n}\n75% {\n		transform: perspective(100px) rotateX(0) rotateY(180deg);\n}\n100% {\n		transform: perspective(100px) rotateX(0) rotateY(0);\n}\n}\n";
n19(css19, {});
var _export_sfc19 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__17 = { name: "VueSpinnerSkew" };
var _sfc_main19 = defineComponent({
  ...__default__17,
  props: useSpinnerProps({ size: "20px" }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const triangleStyle = computed(() => ({
      display: "inline-block",
      width: 0,
      height: 0,
      borderLeft: `${size.value.string} solid transparent`,
      borderRight: `${size.value.string} solid transparent`,
      borderBottom: `${size.value.string} solid ${__props.color}`,
      animation: `vue-spinner-skew 3s 0s infinite cubic-bezier(0.09, 0.57, 0.49, 0.9)`,
      animationFillMode: "both"
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(triangleStyle.value)
      }, null, 4);
    };
  }
});
var vueSpinnerSkew = _export_sfc19(_sfc_main19, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-skew.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-square.vue.js
var e20 = [];
var t20 = [];
function n20(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e20.indexOf(i);
      -1 === u && (u = e20.push(i) - 1, t20[u] = {}), a = t20[u] && t20[u][s] ? t20[u][s] : t20[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css20 = "\n@keyframes vue-spinner-square {\n25% {\n		transform: rotateX(180deg) rotateY(0);\n}\n50% {\n		transform: rotateX(180deg) rotateY(180deg);\n}\n75% {\n		transform: rotateX(0) rotateY(180deg);\n}\n100% {\n		transform: rotateX(0) rotateY(0);\n}\n}\n";
n20(css20, {});
var _export_sfc20 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__18 = { name: "VueSpinnerSquare" };
var _sfc_main20 = defineComponent({
  ...__default__18,
  props: useSpinnerProps({ size: "50px" }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const squareStyle = computed(() => ({
      display: "inline-block",
      width: size.value.string,
      height: size.value.string,
      backgroundColor: __props.color,
      animation: "vue-spinner-square 3s 0s infinite cubic-bezier(0.09, 0.57, 0.49, 0.9)",
      animationFillMode: "both"
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        style: normalizeStyle(squareStyle.value)
      }, null, 4);
    };
  }
});
var vueSpinnerSquare = _export_sfc20(_sfc_main20, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-square.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-sync.vue.js
var e21 = [];
var t21 = [];
function n21(n22, r) {
  if (n22 && "undefined" != typeof document) {
    var a, s = true === r.prepend ? "prepend" : "append", d = true === r.singleTag, i = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d) {
      var u = e21.indexOf(i);
      -1 === u && (u = e21.push(i) - 1, t21[u] = {}), a = t21[u] && t21[u][s] ? t21[u][s] : t21[u][s] = c();
    } else a = c();
    65279 === n22.charCodeAt(0) && (n22 = n22.substring(1)), a.styleSheet ? a.styleSheet.cssText += n22 : a.appendChild(document.createTextNode(n22));
  }
  function c() {
    var e22 = document.createElement("style");
    if (e22.setAttribute("type", "text/css"), r.attributes) for (var t22 = Object.keys(r.attributes), n23 = 0; n23 < t22.length; n23++) e22.setAttribute(t22[n23], r.attributes[t22[n23]]);
    var a2 = "prepend" === s ? "afterbegin" : "beforeend";
    return i.insertAdjacentElement(a2, e22), e22;
  }
}
var css21 = "\n@keyframes vue-spinner-sync {\n33% {\n		transform: translateY(10px);\n}\n66% {\n		transform: translateY(-10px);\n}\n100% {\n		transform: translateY(0);\n}\n}\n";
n21(css21, {});
var _export_sfc21 = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
var __default__19 = { name: "VueSpinnerBounce" };
var _sfc_main21 = defineComponent({
  ...__default__19,
  props: useSpinnerProps({ size: "15px", margin: "2px" }),
  setup(__props) {
    const size = useSize(() => __props.size);
    const margin = useSize(() => __props.margin);
    const getCircleStyle = (version) => ({
      display: "inline-block",
      width: size.value.string,
      height: size.value.string,
      margin: margin.value.string,
      borderRadius: "100%",
      backgroundColor: __props.color,
      boxSizing: "content-box",
      animation: `vue-spinner-sync 0.6s ease-in-out ${version * 0.07}s infinite normal both running`
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        (openBlock(), createElementBlock(Fragment, null, renderList(3, (n22) => {
          return createBaseVNode("div", {
            key: n22,
            class: "circle",
            style: normalizeStyle(getCircleStyle(n22 + 1))
          }, null, 4);
        }), 64))
      ]);
    };
  }
});
var vueSpinnerSync = _export_sfc21(_sfc_main21, [["__file", "/Users/leonzalion/projects/vue3-spinners/packages/vue3-spinners/src/spinners/vue-spinner-sync.vue"]]);

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/spinners/vue-spinner-tail.js
var svg22 = [
  h("defs", [
    h("linearGradient", {
      x1: "8.042%",
      y1: "0%",
      x2: "65.682%",
      y2: "23.865%",
      id: "a"
    }, [
      h("stop", {
        "stop-color": "currentColor",
        "stop-opacity": "0",
        offset: "0%"
      }),
      h("stop", {
        "stop-color": "currentColor",
        "stop-opacity": ".631",
        offset: "63.146%"
      }),
      h("stop", {
        "stop-color": "currentColor",
        offset: "100%"
      })
    ])
  ]),
  h("g", {
    transform: "translate(1 1)",
    fill: "none",
    "fill-rule": "evenodd"
  }, [
    h("path", {
      d: "M36 18c0-9.94-8.06-18-18-18",
      stroke: "url(#a)",
      "stroke-width": "2"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "rotate",
        from: "0 18 18",
        to: "360 18 18",
        dur: "0.9s",
        repeatCount: "indefinite"
      })
    ]),
    h("circle", {
      fill: "currentColor",
      cx: "36",
      cy: "18",
      r: "1"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "rotate",
        from: "0 18 18",
        to: "360 18 18",
        dur: "0.9s",
        repeatCount: "indefinite"
      })
    ])
  ])
];
var vue_spinner_tail_default = defineComponent({
  name: "VueSpinnerTail",
  props: spinnerProps,
  setup(props) {
    const { cSize, classes, style } = useSpinner(props);
    return () => h("svg", {
      style: style.value,
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 38 38",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg22);
  }
});

// node_modules/.pnpm/vue3-spinners@1.2.2_vue@3.4.38_typescript@5.5.4_/node_modules/vue3-spinners/utils/plugin.js
var VueSpinnersPlugin = {
  install(app) {
    for (const SpinnerComponent of Object.values(spinners_exports)) {
      app.component(SpinnerComponent.name, SpinnerComponent);
    }
  }
};
export {
  vueSpinner as VueSpinner,
  vue_spinner_audio_default as VueSpinnerAudio,
  vue_spinner_ball_default as VueSpinnerBall,
  vueSpinnerBar as VueSpinnerBar,
  vue_spinner_bars_default as VueSpinnerBars,
  vueSpinnerBeat as VueSpinnerBeat,
  vueSpinnerBounce as VueSpinnerBounce,
  vue_spinner_box_default as VueSpinnerBox,
  vueSpinnerCircle as VueSpinnerCircle,
  vueSpinnerClimbingBox as VueSpinnerClimbingBox,
  vueSpinnerClip as VueSpinnerClip,
  vue_spinner_clock_default as VueSpinnerClock,
  vue_spinner_comment_default as VueSpinnerComment,
  vue_spinner_core_default as VueSpinnerCore,
  vueSpinnerDot as VueSpinnerDot,
  vue_spinner_dots_default as VueSpinnerDots,
  vue_spinner_facebook_default as VueSpinnerFacebook,
  vueSpinnerFade as VueSpinnerFade,
  vue_spinner_gears_default as VueSpinnerGears,
  vue_spinner_grid_default as VueSpinnerGrid,
  vueSpinnerGridPop as VueSpinnerGridPop,
  vue_spinner_hearts_default as VueSpinnerHearts,
  vue_spinner_hourglass_default as VueSpinnerHourglass,
  vue_spinner_infinity_default as VueSpinnerInfinity,
  vue_spinner_ios_default as VueSpinnerIos,
  vueSpinnerMoon as VueSpinnerMoon,
  vue_spinner_orbit_default as VueSpinnerOrbit,
  vue_spinner_oval_default as VueSpinnerOval,
  vueSpinnerPacman as VueSpinnerPacman,
  vue_spinner_pie_default as VueSpinnerPie,
  vueSpinnerPropagate as VueSpinnerPropagate,
  vue_spinner_puff_default as VueSpinnerPuff,
  vueSpinnerPulse as VueSpinnerPulse,
  vue_spinner_radio_default as VueSpinnerRadio,
  vueSpinnerRing as VueSpinnerRing,
  vue_spinner_rings_default as VueSpinnerRings,
  vueSpinnerRise as VueSpinnerRise,
  vueSpinnerRotate as VueSpinnerRotate,
  vueSpinnerScale as VueSpinnerScale,
  vueSpinnerSkew as VueSpinnerSkew,
  vueSpinnerSquare as VueSpinnerSquare,
  vueSpinnerSync as VueSpinnerSync,
  vue_spinner_tail_default as VueSpinnerTail,
  VueSpinnersPlugin
};
//# sourceMappingURL=vue3-spinners.js.map
